// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.1
// source: permission_acl.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// --------   Account and Permission Section --------
type PermissionRule int32

const (
	PermissionRule_NULL           PermissionRule = 0 // 无权限控制
	PermissionRule_SIGN_THRESHOLD PermissionRule = 1 // 签名阈值策略
	PermissionRule_SIGN_AKSET     PermissionRule = 2 // AKSet签名策略
	PermissionRule_SIGN_RATE      PermissionRule = 3 // 签名率策略
	PermissionRule_SIGN_SUM       PermissionRule = 4 // 签名个数策略vim
	PermissionRule_CA_SERVER      PermissionRule = 5 // CA服务器鉴权
	PermissionRule_COMMUNITY_VOTE PermissionRule = 6 // 社区治理
)

// Enum value maps for PermissionRule.
var (
	PermissionRule_name = map[int32]string{
		0: "NULL",
		1: "SIGN_THRESHOLD",
		2: "SIGN_AKSET",
		3: "SIGN_RATE",
		4: "SIGN_SUM",
		5: "CA_SERVER",
		6: "COMMUNITY_VOTE",
	}
	PermissionRule_value = map[string]int32{
		"NULL":           0,
		"SIGN_THRESHOLD": 1,
		"SIGN_AKSET":     2,
		"SIGN_RATE":      3,
		"SIGN_SUM":       4,
		"CA_SERVER":      5,
		"COMMUNITY_VOTE": 6,
	}
)

func (x PermissionRule) Enum() *PermissionRule {
	p := new(PermissionRule)
	*p = x
	return p
}

func (x PermissionRule) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PermissionRule) Descriptor() protoreflect.EnumDescriptor {
	return file_permission_acl_proto_enumTypes[0].Descriptor()
}

func (PermissionRule) Type() protoreflect.EnumType {
	return &file_permission_acl_proto_enumTypes[0]
}

func (x PermissionRule) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PermissionRule.Descriptor instead.
func (PermissionRule) EnumDescriptor() ([]byte, []int) {
	return file_permission_acl_proto_rawDescGZIP(), []int{0}
}

// 签名详情
type SignatureInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey string `protobuf:"bytes,1,opt,name=PublicKey,proto3" json:"PublicKey,omitempty"`
	Sign      []byte `protobuf:"bytes,2,opt,name=Sign,proto3" json:"Sign,omitempty"`
}

func (x *SignatureInfo) Reset() {
	*x = SignatureInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_permission_acl_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignatureInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignatureInfo) ProtoMessage() {}

func (x *SignatureInfo) ProtoReflect() protoreflect.Message {
	mi := &file_permission_acl_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignatureInfo.ProtoReflect.Descriptor instead.
func (*SignatureInfo) Descriptor() ([]byte, []int) {
	return file_permission_acl_proto_rawDescGZIP(), []int{0}
}

func (x *SignatureInfo) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *SignatureInfo) GetSign() []byte {
	if x != nil {
		return x.Sign
	}
	return nil
}

type PermissionModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rule        PermissionRule `protobuf:"varint,1,opt,name=rule,proto3,enum=protos.PermissionRule" json:"rule,omitempty"`
	AcceptValue float64        `protobuf:"fixed64,2,opt,name=acceptValue,proto3" json:"acceptValue,omitempty"` // 取决于用哪种rule, 可以表示签名率，签名数或权重阈值
}

func (x *PermissionModel) Reset() {
	*x = PermissionModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_permission_acl_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermissionModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionModel) ProtoMessage() {}

func (x *PermissionModel) ProtoReflect() protoreflect.Message {
	mi := &file_permission_acl_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionModel.ProtoReflect.Descriptor instead.
func (*PermissionModel) Descriptor() ([]byte, []int) {
	return file_permission_acl_proto_rawDescGZIP(), []int{1}
}

func (x *PermissionModel) GetRule() PermissionRule {
	if x != nil {
		return x.Rule
	}
	return PermissionRule_NULL
}

func (x *PermissionModel) GetAcceptValue() float64 {
	if x != nil {
		return x.AcceptValue
	}
	return 0
}

// AK集的表示方法
type AkSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aks []string `protobuf:"bytes,1,rep,name=aks,proto3" json:"aks,omitempty"` // 一堆公钥
}

func (x *AkSet) Reset() {
	*x = AkSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_permission_acl_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AkSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AkSet) ProtoMessage() {}

func (x *AkSet) ProtoReflect() protoreflect.Message {
	mi := &file_permission_acl_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AkSet.ProtoReflect.Descriptor instead.
func (*AkSet) Descriptor() ([]byte, []int) {
	return file_permission_acl_proto_rawDescGZIP(), []int{2}
}

func (x *AkSet) GetAks() []string {
	if x != nil {
		return x.Aks
	}
	return nil
}

type AkSets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sets       map[string]*AkSet `protobuf:"bytes,1,rep,name=sets,proto3" json:"sets,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // 公钥or账户名集
	Expression string            `protobuf:"bytes,2,opt,name=expression,proto3" json:"expression,omitempty"`                                                                             // 表达式，一期不支持表达式，默认集合内是and，集合间是or
}

func (x *AkSets) Reset() {
	*x = AkSets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_permission_acl_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AkSets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AkSets) ProtoMessage() {}

func (x *AkSets) ProtoReflect() protoreflect.Message {
	mi := &file_permission_acl_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AkSets.ProtoReflect.Descriptor instead.
func (*AkSets) Descriptor() ([]byte, []int) {
	return file_permission_acl_proto_rawDescGZIP(), []int{3}
}

func (x *AkSets) GetSets() map[string]*AkSet {
	if x != nil {
		return x.Sets
	}
	return nil
}

func (x *AkSets) GetExpression() string {
	if x != nil {
		return x.Expression
	}
	return ""
}

// Acl实际使用的结构
type Acl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pm        *PermissionModel   `protobuf:"bytes,1,opt,name=pm,proto3" json:"pm,omitempty"`                                                                                                         // 采用的权限模型
	AksWeight map[string]float64 `protobuf:"bytes,2,rep,name=aksWeight,proto3" json:"aksWeight,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"` // 公钥or账户名  -> 权重
	AkSets    *AkSets            `protobuf:"bytes,3,opt,name=akSets,proto3" json:"akSets,omitempty"`
}

func (x *Acl) Reset() {
	*x = Acl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_permission_acl_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Acl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Acl) ProtoMessage() {}

func (x *Acl) ProtoReflect() protoreflect.Message {
	mi := &file_permission_acl_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Acl.ProtoReflect.Descriptor instead.
func (*Acl) Descriptor() ([]byte, []int) {
	return file_permission_acl_proto_rawDescGZIP(), []int{4}
}

func (x *Acl) GetPm() *PermissionModel {
	if x != nil {
		return x.Pm
	}
	return nil
}

func (x *Acl) GetAksWeight() map[string]float64 {
	if x != nil {
		return x.AksWeight
	}
	return nil
}

func (x *Acl) GetAkSets() *AkSets {
	if x != nil {
		return x.AkSets
	}
	return nil
}

// 查询Acl
type AclStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bcname       string `protobuf:"bytes,1,opt,name=bcname,proto3" json:"bcname,omitempty"`
	AccountName  string `protobuf:"bytes,2,opt,name=accountName,proto3" json:"accountName,omitempty"`
	ContractName string `protobuf:"bytes,3,opt,name=contractName,proto3" json:"contractName,omitempty"`
	MethodName   string `protobuf:"bytes,4,opt,name=methodName,proto3" json:"methodName,omitempty"`
	Confirmed    bool   `protobuf:"varint,5,opt,name=confirmed,proto3" json:"confirmed,omitempty"`
	Acl          *Acl   `protobuf:"bytes,6,opt,name=acl,proto3" json:"acl,omitempty"`
}

func (x *AclStatus) Reset() {
	*x = AclStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_permission_acl_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AclStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AclStatus) ProtoMessage() {}

func (x *AclStatus) ProtoReflect() protoreflect.Message {
	mi := &file_permission_acl_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AclStatus.ProtoReflect.Descriptor instead.
func (*AclStatus) Descriptor() ([]byte, []int) {
	return file_permission_acl_proto_rawDescGZIP(), []int{5}
}

func (x *AclStatus) GetBcname() string {
	if x != nil {
		return x.Bcname
	}
	return ""
}

func (x *AclStatus) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *AclStatus) GetContractName() string {
	if x != nil {
		return x.ContractName
	}
	return ""
}

func (x *AclStatus) GetMethodName() string {
	if x != nil {
		return x.MethodName
	}
	return ""
}

func (x *AclStatus) GetConfirmed() bool {
	if x != nil {
		return x.Confirmed
	}
	return false
}

func (x *AclStatus) GetAcl() *Acl {
	if x != nil {
		return x.Acl
	}
	return nil
}

type AK2AccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bcname  string `protobuf:"bytes,1,opt,name=bcname,proto3" json:"bcname,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *AK2AccountRequest) Reset() {
	*x = AK2AccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_permission_acl_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AK2AccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AK2AccountRequest) ProtoMessage() {}

func (x *AK2AccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_permission_acl_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AK2AccountRequest.ProtoReflect.Descriptor instead.
func (*AK2AccountRequest) Descriptor() ([]byte, []int) {
	return file_permission_acl_proto_rawDescGZIP(), []int{6}
}

func (x *AK2AccountRequest) GetBcname() string {
	if x != nil {
		return x.Bcname
	}
	return ""
}

func (x *AK2AccountRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type AK2AccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bcname  string   `protobuf:"bytes,1,opt,name=bcname,proto3" json:"bcname,omitempty"`
	Account []string `protobuf:"bytes,2,rep,name=account,proto3" json:"account,omitempty"`
}

func (x *AK2AccountResponse) Reset() {
	*x = AK2AccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_permission_acl_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AK2AccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AK2AccountResponse) ProtoMessage() {}

func (x *AK2AccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_permission_acl_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AK2AccountResponse.ProtoReflect.Descriptor instead.
func (*AK2AccountResponse) Descriptor() ([]byte, []int) {
	return file_permission_acl_proto_rawDescGZIP(), []int{7}
}

func (x *AK2AccountResponse) GetBcname() string {
	if x != nil {
		return x.Bcname
	}
	return ""
}

func (x *AK2AccountResponse) GetAccount() []string {
	if x != nil {
		return x.Account
	}
	return nil
}

var File_permission_acl_proto protoreflect.FileDescriptor

var file_permission_acl_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x63, 0x6c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x22, 0x41,
	0x0a, 0x0d, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1c, 0x0a, 0x09, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x53, 0x69, 0x67, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x53, 0x69, 0x67,
	0x6e, 0x22, 0x5f, 0x0a, 0x0f, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x12, 0x2a, 0x0a, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x75, 0x6c, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x19, 0x0a, 0x05, 0x41, 0x6b, 0x53, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61,
	0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x61, 0x6b, 0x73, 0x22, 0x9e, 0x01,
	0x0a, 0x06, 0x41, 0x6b, 0x53, 0x65, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x04, 0x73, 0x65, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x41, 0x6b, 0x53, 0x65, 0x74, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x04, 0x73, 0x65, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x46, 0x0a, 0x09, 0x53, 0x65, 0x74, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x41, 0x6b,
	0x53, 0x65, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xce,
	0x01, 0x0a, 0x03, 0x41, 0x63, 0x6c, 0x12, 0x27, 0x0a, 0x02, 0x70, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x02, 0x70, 0x6d, 0x12,
	0x38, 0x0a, 0x09, 0x61, 0x6b, 0x73, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x41, 0x63, 0x6c, 0x2e,
	0x41, 0x6b, 0x73, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09,
	0x61, 0x6b, 0x73, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x26, 0x0a, 0x06, 0x61, 0x6b, 0x53,
	0x65, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x41, 0x6b, 0x53, 0x65, 0x74, 0x73, 0x52, 0x06, 0x61, 0x6b, 0x53, 0x65, 0x74,
	0x73, 0x1a, 0x3c, 0x0a, 0x0e, 0x41, 0x6b, 0x73, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0xc6, 0x01, 0x0a, 0x09, 0x41, 0x63, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x62, 0x63, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62,
	0x63, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x03, 0x61, 0x63, 0x6c,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x41, 0x63, 0x6c, 0x52, 0x03, 0x61, 0x63, 0x6c, 0x22, 0x45, 0x0a, 0x11, 0x41, 0x4b, 0x32, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x62, 0x63, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62,
	0x63, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22,
	0x46, 0x0a, 0x12, 0x41, 0x4b, 0x32, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x63, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x63, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2a, 0x7e, 0x0a, 0x0e, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c,
	0x4c, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x49, 0x47, 0x4e, 0x5f, 0x54, 0x48, 0x52, 0x45,
	0x53, 0x48, 0x4f, 0x4c, 0x44, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x49, 0x47, 0x4e, 0x5f,
	0x41, 0x4b, 0x53, 0x45, 0x54, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x49, 0x47, 0x4e, 0x5f,
	0x52, 0x41, 0x54, 0x45, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x49, 0x47, 0x4e, 0x5f, 0x53,
	0x55, 0x4d, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x41, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x45,
	0x52, 0x10, 0x05, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x4f, 0x4d, 0x4d, 0x55, 0x4e, 0x49, 0x54, 0x59,
	0x5f, 0x56, 0x4f, 0x54, 0x45, 0x10, 0x06, 0x42, 0x29, 0x5a, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x6f, 0x6f, 0x79, 0x61, 0x6e, 0x67, 0x32, 0x30, 0x31,
	0x38, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_permission_acl_proto_rawDescOnce sync.Once
	file_permission_acl_proto_rawDescData = file_permission_acl_proto_rawDesc
)

func file_permission_acl_proto_rawDescGZIP() []byte {
	file_permission_acl_proto_rawDescOnce.Do(func() {
		file_permission_acl_proto_rawDescData = protoimpl.X.CompressGZIP(file_permission_acl_proto_rawDescData)
	})
	return file_permission_acl_proto_rawDescData
}

var file_permission_acl_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_permission_acl_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_permission_acl_proto_goTypes = []interface{}{
	(PermissionRule)(0),        // 0: protos.PermissionRule
	(*SignatureInfo)(nil),      // 1: protos.SignatureInfo
	(*PermissionModel)(nil),    // 2: protos.PermissionModel
	(*AkSet)(nil),              // 3: protos.AkSet
	(*AkSets)(nil),             // 4: protos.AkSets
	(*Acl)(nil),                // 5: protos.Acl
	(*AclStatus)(nil),          // 6: protos.AclStatus
	(*AK2AccountRequest)(nil),  // 7: protos.AK2AccountRequest
	(*AK2AccountResponse)(nil), // 8: protos.AK2AccountResponse
	nil,                        // 9: protos.AkSets.SetsEntry
	nil,                        // 10: protos.Acl.AksWeightEntry
}
var file_permission_acl_proto_depIdxs = []int32{
	0,  // 0: protos.PermissionModel.rule:type_name -> protos.PermissionRule
	9,  // 1: protos.AkSets.sets:type_name -> protos.AkSets.SetsEntry
	2,  // 2: protos.Acl.pm:type_name -> protos.PermissionModel
	10, // 3: protos.Acl.aksWeight:type_name -> protos.Acl.AksWeightEntry
	4,  // 4: protos.Acl.akSets:type_name -> protos.AkSets
	5,  // 5: protos.AclStatus.acl:type_name -> protos.Acl
	3,  // 6: protos.AkSets.SetsEntry.value:type_name -> protos.AkSet
	7,  // [7:7] is the sub-list for method output_type
	7,  // [7:7] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_permission_acl_proto_init() }
func file_permission_acl_proto_init() {
	if File_permission_acl_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_permission_acl_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignatureInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_permission_acl_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PermissionModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_permission_acl_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AkSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_permission_acl_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AkSets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_permission_acl_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Acl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_permission_acl_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AclStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_permission_acl_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AK2AccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_permission_acl_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AK2AccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_permission_acl_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_permission_acl_proto_goTypes,
		DependencyIndexes: file_permission_acl_proto_depIdxs,
		EnumInfos:         file_permission_acl_proto_enumTypes,
		MessageInfos:      file_permission_acl_proto_msgTypes,
	}.Build()
	File_permission_acl_proto = out.File
	file_permission_acl_proto_rawDesc = nil
	file_permission_acl_proto_goTypes = nil
	file_permission_acl_proto_depIdxs = nil
}
