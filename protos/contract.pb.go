// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.1
// source: contract.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ResourceType int32

const (
	ResourceType_CPU    ResourceType = 0
	ResourceType_MEMORY ResourceType = 1
	ResourceType_DISK   ResourceType = 2
	// the fee used in kernel contract
	ResourceType_XFEE ResourceType = 3
)

// Enum value maps for ResourceType.
var (
	ResourceType_name = map[int32]string{
		0: "CPU",
		1: "MEMORY",
		2: "DISK",
		3: "XFEE",
	}
	ResourceType_value = map[string]int32{
		"CPU":    0,
		"MEMORY": 1,
		"DISK":   2,
		"XFEE":   3,
	}
)

func (x ResourceType) Enum() *ResourceType {
	p := new(ResourceType)
	*p = x
	return p
}

func (x ResourceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResourceType) Descriptor() protoreflect.EnumDescriptor {
	return file_contract_proto_enumTypes[0].Descriptor()
}

func (ResourceType) Type() protoreflect.EnumType {
	return &file_contract_proto_enumTypes[0]
}

func (x ResourceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResourceType.Descriptor instead.
func (ResourceType) EnumDescriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{0}
}

// TransactionStatus is the status of transaction
type TransactionStatus int32

const (
	// Undefined status
	TransactionStatus_TX_UNDEFINE TransactionStatus = 0
	// Transaction not exist
	TransactionStatus_TX_NOEXIST TransactionStatus = 1
	// Transaction have been confirmed
	TransactionStatus_TX_CONFIRM TransactionStatus = 2
	// Transaction is on the furcation
	TransactionStatus_TX_FURCATION TransactionStatus = 3
	// Transaction have not been confirmed
	TransactionStatus_TX_UNCONFIRM TransactionStatus = 4
	// Transaction occurs error
	TransactionStatus_TX_FAILED TransactionStatus = 5
)

// Enum value maps for TransactionStatus.
var (
	TransactionStatus_name = map[int32]string{
		0: "TX_UNDEFINE",
		1: "TX_NOEXIST",
		2: "TX_CONFIRM",
		3: "TX_FURCATION",
		4: "TX_UNCONFIRM",
		5: "TX_FAILED",
	}
	TransactionStatus_value = map[string]int32{
		"TX_UNDEFINE":  0,
		"TX_NOEXIST":   1,
		"TX_CONFIRM":   2,
		"TX_FURCATION": 3,
		"TX_UNCONFIRM": 4,
		"TX_FAILED":    5,
	}
)

func (x TransactionStatus) Enum() *TransactionStatus {
	p := new(TransactionStatus)
	*p = x
	return p
}

func (x TransactionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransactionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_contract_proto_enumTypes[1].Descriptor()
}

func (TransactionStatus) Type() protoreflect.EnumType {
	return &file_contract_proto_enumTypes[1]
}

func (x TransactionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransactionStatus.Descriptor instead.
func (TransactionStatus) EnumDescriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{1}
}

// BlockStatus is the status of block
type BlockStatus int32

const (
	BlockStatus_BLOCK_ERROR   BlockStatus = 0
	BlockStatus_BLOCK_TRUNK   BlockStatus = 1
	BlockStatus_BLOCK_BRANCH  BlockStatus = 2
	BlockStatus_BLOCK_NOEXIST BlockStatus = 3
)

// Enum value maps for BlockStatus.
var (
	BlockStatus_name = map[int32]string{
		0: "BLOCK_ERROR",
		1: "BLOCK_TRUNK",
		2: "BLOCK_BRANCH",
		3: "BLOCK_NOEXIST",
	}
	BlockStatus_value = map[string]int32{
		"BLOCK_ERROR":   0,
		"BLOCK_TRUNK":   1,
		"BLOCK_BRANCH":  2,
		"BLOCK_NOEXIST": 3,
	}
)

func (x BlockStatus) Enum() *BlockStatus {
	p := new(BlockStatus)
	*p = x
	return p
}

func (x BlockStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BlockStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_contract_proto_enumTypes[2].Descriptor()
}

func (BlockStatus) Type() protoreflect.EnumType {
	return &file_contract_proto_enumTypes[2]
}

func (x BlockStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BlockStatus.Descriptor instead.
func (BlockStatus) EnumDescriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{2}
}

// QCState is the phase of hotstuff
type QCState int32

const (
	QCState_NEW_VIEW   QCState = 0
	QCState_PREPARE    QCState = 1
	QCState_PRE_COMMIT QCState = 2
	QCState_COMMIT     QCState = 3
	QCState_DECIDE     QCState = 4
)

// Enum value maps for QCState.
var (
	QCState_name = map[int32]string{
		0: "NEW_VIEW",
		1: "PREPARE",
		2: "PRE_COMMIT",
		3: "COMMIT",
		4: "DECIDE",
	}
	QCState_value = map[string]int32{
		"NEW_VIEW":   0,
		"PREPARE":    1,
		"PRE_COMMIT": 2,
		"COMMIT":     3,
		"DECIDE":     4,
	}
)

func (x QCState) Enum() *QCState {
	p := new(QCState)
	*p = x
	return p
}

func (x QCState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QCState) Descriptor() protoreflect.EnumDescriptor {
	return file_contract_proto_enumTypes[3].Descriptor()
}

func (QCState) Type() protoreflect.EnumType {
	return &file_contract_proto_enumTypes[3]
}

func (x QCState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QCState.Descriptor instead.
func (QCState) EnumDescriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{3}
}

type GasPrice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CpuRate  int64 `protobuf:"varint,1,opt,name=cpu_rate,json=cpuRate,proto3" json:"cpu_rate,omitempty"`
	MemRate  int64 `protobuf:"varint,2,opt,name=mem_rate,json=memRate,proto3" json:"mem_rate,omitempty"`
	DiskRate int64 `protobuf:"varint,3,opt,name=disk_rate,json=diskRate,proto3" json:"disk_rate,omitempty"`
	XfeeRate int64 `protobuf:"varint,4,opt,name=xfee_rate,json=xfeeRate,proto3" json:"xfee_rate,omitempty"`
}

func (x *GasPrice) Reset() {
	*x = GasPrice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GasPrice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GasPrice) ProtoMessage() {}

func (x *GasPrice) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GasPrice.ProtoReflect.Descriptor instead.
func (*GasPrice) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{0}
}

func (x *GasPrice) GetCpuRate() int64 {
	if x != nil {
		return x.CpuRate
	}
	return 0
}

func (x *GasPrice) GetMemRate() int64 {
	if x != nil {
		return x.MemRate
	}
	return 0
}

func (x *GasPrice) GetDiskRate() int64 {
	if x != nil {
		return x.DiskRate
	}
	return 0
}

func (x *GasPrice) GetXfeeRate() int64 {
	if x != nil {
		return x.XfeeRate
	}
	return 0
}

type ResourceLimit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  ResourceType `protobuf:"varint,1,opt,name=type,proto3,enum=protos.ResourceType" json:"type,omitempty"`
	Limit int64        `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ResourceLimit) Reset() {
	*x = ResourceLimit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceLimit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceLimit) ProtoMessage() {}

func (x *ResourceLimit) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceLimit.ProtoReflect.Descriptor instead.
func (*ResourceLimit) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{1}
}

func (x *ResourceLimit) GetType() ResourceType {
	if x != nil {
		return x.Type
	}
	return ResourceType_CPU
}

func (x *ResourceLimit) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// 预执行的请求结构
type InvokeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModuleName     string            `protobuf:"bytes,1,opt,name=module_name,json=moduleName,proto3" json:"module_name,omitempty"`
	ContractName   string            `protobuf:"bytes,2,opt,name=contract_name,json=contractName,proto3" json:"contract_name,omitempty"`
	MethodName     string            `protobuf:"bytes,3,opt,name=method_name,json=methodName,proto3" json:"method_name,omitempty"`
	Args           map[string][]byte `protobuf:"bytes,4,rep,name=args,proto3" json:"args,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ResourceLimits []*ResourceLimit  `protobuf:"bytes,5,rep,name=resource_limits,json=resourceLimits,proto3" json:"resource_limits,omitempty"`
	// amount is the amount transfer to the contract
	// attention: In one transaction, transfer to only one contract is allowed
	Amount string `protobuf:"bytes,6,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *InvokeRequest) Reset() {
	*x = InvokeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvokeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvokeRequest) ProtoMessage() {}

func (x *InvokeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvokeRequest.ProtoReflect.Descriptor instead.
func (*InvokeRequest) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{2}
}

func (x *InvokeRequest) GetModuleName() string {
	if x != nil {
		return x.ModuleName
	}
	return ""
}

func (x *InvokeRequest) GetContractName() string {
	if x != nil {
		return x.ContractName
	}
	return ""
}

func (x *InvokeRequest) GetMethodName() string {
	if x != nil {
		return x.MethodName
	}
	return ""
}

func (x *InvokeRequest) GetArgs() map[string][]byte {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *InvokeRequest) GetResourceLimits() []*ResourceLimit {
	if x != nil {
		return x.ResourceLimits
	}
	return nil
}

func (x *InvokeRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

// 预执行的返回结构
type InvokeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inputs      []*TxInputExt       `protobuf:"bytes,1,rep,name=inputs,proto3" json:"inputs,omitempty"`
	Outputs     []*TxOutputExt      `protobuf:"bytes,2,rep,name=outputs,proto3" json:"outputs,omitempty"`
	Response    [][]byte            `protobuf:"bytes,3,rep,name=response,proto3" json:"response,omitempty"`
	GasUsed     int64               `protobuf:"varint,4,opt,name=gas_used,json=gasUsed,proto3" json:"gas_used,omitempty"`
	Requests    []*InvokeRequest    `protobuf:"bytes,5,rep,name=requests,proto3" json:"requests,omitempty"`
	Responses   []*ContractResponse `protobuf:"bytes,6,rep,name=responses,proto3" json:"responses,omitempty"`
	UtxoInputs  []*TxInput          `protobuf:"bytes,7,rep,name=utxoInputs,proto3" json:"utxoInputs,omitempty"`
	UtxoOutputs []*TxOutput         `protobuf:"bytes,8,rep,name=utxoOutputs,proto3" json:"utxoOutputs,omitempty"`
}

func (x *InvokeResponse) Reset() {
	*x = InvokeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvokeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvokeResponse) ProtoMessage() {}

func (x *InvokeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvokeResponse.ProtoReflect.Descriptor instead.
func (*InvokeResponse) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{3}
}

func (x *InvokeResponse) GetInputs() []*TxInputExt {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *InvokeResponse) GetOutputs() []*TxOutputExt {
	if x != nil {
		return x.Outputs
	}
	return nil
}

func (x *InvokeResponse) GetResponse() [][]byte {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *InvokeResponse) GetGasUsed() int64 {
	if x != nil {
		return x.GasUsed
	}
	return 0
}

func (x *InvokeResponse) GetRequests() []*InvokeRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

func (x *InvokeResponse) GetResponses() []*ContractResponse {
	if x != nil {
		return x.Responses
	}
	return nil
}

func (x *InvokeResponse) GetUtxoInputs() []*TxInput {
	if x != nil {
		return x.UtxoInputs
	}
	return nil
}

func (x *InvokeResponse) GetUtxoOutputs() []*TxOutput {
	if x != nil {
		return x.UtxoOutputs
	}
	return nil
}

// ContractResponse is the response returnd by contract
type ContractResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Body    []byte `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *ContractResponse) Reset() {
	*x = ContractResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractResponse) ProtoMessage() {}

func (x *ContractResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractResponse.ProtoReflect.Descriptor instead.
func (*ContractResponse) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{4}
}

func (x *ContractResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ContractResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ContractResponse) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

type WasmCodeDesc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Runtime      string `protobuf:"bytes,1,opt,name=runtime,proto3" json:"runtime,omitempty"`
	Compiler     string `protobuf:"bytes,2,opt,name=compiler,proto3" json:"compiler,omitempty"`
	Digest       []byte `protobuf:"bytes,3,opt,name=digest,proto3" json:"digest,omitempty"`
	VmCompiler   string `protobuf:"bytes,4,opt,name=vm_compiler,json=vmCompiler,proto3" json:"vm_compiler,omitempty"`
	ContractType string `protobuf:"bytes,5,opt,name=contract_type,json=contractType,proto3" json:"contract_type,omitempty"`
}

func (x *WasmCodeDesc) Reset() {
	*x = WasmCodeDesc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WasmCodeDesc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WasmCodeDesc) ProtoMessage() {}

func (x *WasmCodeDesc) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WasmCodeDesc.ProtoReflect.Descriptor instead.
func (*WasmCodeDesc) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{5}
}

func (x *WasmCodeDesc) GetRuntime() string {
	if x != nil {
		return x.Runtime
	}
	return ""
}

func (x *WasmCodeDesc) GetCompiler() string {
	if x != nil {
		return x.Compiler
	}
	return ""
}

func (x *WasmCodeDesc) GetDigest() []byte {
	if x != nil {
		return x.Digest
	}
	return nil
}

func (x *WasmCodeDesc) GetVmCompiler() string {
	if x != nil {
		return x.VmCompiler
	}
	return ""
}

func (x *WasmCodeDesc) GetContractType() string {
	if x != nil {
		return x.ContractType
	}
	return ""
}

type ContractEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contract string `protobuf:"bytes,1,opt,name=contract,proto3" json:"contract,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Body     []byte `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *ContractEvent) Reset() {
	*x = ContractEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractEvent) ProtoMessage() {}

func (x *ContractEvent) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractEvent.ProtoReflect.Descriptor instead.
func (*ContractEvent) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{6}
}

func (x *ContractEvent) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

func (x *ContractEvent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ContractEvent) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

type ContractStatData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountCount  int64 `protobuf:"varint,1,opt,name=accountCount,proto3" json:"accountCount,omitempty"`
	ContractCount int64 `protobuf:"varint,2,opt,name=contractCount,proto3" json:"contractCount,omitempty"`
}

func (x *ContractStatData) Reset() {
	*x = ContractStatData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractStatData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractStatData) ProtoMessage() {}

func (x *ContractStatData) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractStatData.ProtoReflect.Descriptor instead.
func (*ContractStatData) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{7}
}

func (x *ContractStatData) GetAccountCount() int64 {
	if x != nil {
		return x.AccountCount
	}
	return 0
}

func (x *ContractStatData) GetContractCount() int64 {
	if x != nil {
		return x.ContractCount
	}
	return 0
}

// Status of a contract
type ContractStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractName string `protobuf:"bytes,1,opt,name=contract_name,json=contractName,proto3" json:"contract_name,omitempty"`
	Txid         string `protobuf:"bytes,2,opt,name=txid,proto3" json:"txid,omitempty"`
	Desc         []byte `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	IsBanned     bool   `protobuf:"varint,4,opt,name=is_banned,json=isBanned,proto3" json:"is_banned,omitempty"`
	Timestamp    int64  `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Runtime      string `protobuf:"bytes,6,opt,name=runtime,proto3" json:"runtime,omitempty"`
}

func (x *ContractStatus) Reset() {
	*x = ContractStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractStatus) ProtoMessage() {}

func (x *ContractStatus) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractStatus.ProtoReflect.Descriptor instead.
func (*ContractStatus) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{8}
}

func (x *ContractStatus) GetContractName() string {
	if x != nil {
		return x.ContractName
	}
	return ""
}

func (x *ContractStatus) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *ContractStatus) GetDesc() []byte {
	if x != nil {
		return x.Desc
	}
	return nil
}

func (x *ContractStatus) GetIsBanned() bool {
	if x != nil {
		return x.IsBanned
	}
	return false
}

func (x *ContractStatus) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ContractStatus) GetRuntime() string {
	if x != nil {
		return x.Runtime
	}
	return ""
}

type PingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{9}
}

type PingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{10}
}

type NativeCallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The context id of this request
	Ctxid int64 `protobuf:"varint,1,opt,name=ctxid,proto3" json:"ctxid,omitempty"`
}

func (x *NativeCallRequest) Reset() {
	*x = NativeCallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NativeCallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NativeCallRequest) ProtoMessage() {}

func (x *NativeCallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NativeCallRequest.ProtoReflect.Descriptor instead.
func (*NativeCallRequest) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{11}
}

func (x *NativeCallRequest) GetCtxid() int64 {
	if x != nil {
		return x.Ctxid
	}
	return 0
}

type NativeCallResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NativeCallResponse) Reset() {
	*x = NativeCallResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NativeCallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NativeCallResponse) ProtoMessage() {}

func (x *NativeCallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NativeCallResponse.ProtoReflect.Descriptor instead.
func (*NativeCallResponse) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{12}
}

type ArgPair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ArgPair) Reset() {
	*x = ArgPair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArgPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArgPair) ProtoMessage() {}

func (x *ArgPair) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArgPair.ProtoReflect.Descriptor instead.
func (*ArgPair) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{13}
}

func (x *ArgPair) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ArgPair) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type CallArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Method         string     `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"`
	Args           []*ArgPair `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`
	Initiator      string     `protobuf:"bytes,3,opt,name=initiator,proto3" json:"initiator,omitempty"`
	AuthRequire    []string   `protobuf:"bytes,4,rep,name=auth_require,json=authRequire,proto3" json:"auth_require,omitempty"`
	TransferAmount string     `protobuf:"bytes,5,opt,name=transfer_amount,json=transferAmount,proto3" json:"transfer_amount,omitempty"`
	Caller         string     `protobuf:"bytes,6,opt,name=caller,proto3" json:"caller,omitempty"`
}

func (x *CallArgs) Reset() {
	*x = CallArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallArgs) ProtoMessage() {}

func (x *CallArgs) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallArgs.ProtoReflect.Descriptor instead.
func (*CallArgs) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{14}
}

func (x *CallArgs) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *CallArgs) GetArgs() []*ArgPair {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *CallArgs) GetInitiator() string {
	if x != nil {
		return x.Initiator
	}
	return ""
}

func (x *CallArgs) GetAuthRequire() []string {
	if x != nil {
		return x.AuthRequire
	}
	return nil
}

func (x *CallArgs) GetTransferAmount() string {
	if x != nil {
		return x.TransferAmount
	}
	return ""
}

func (x *CallArgs) GetCaller() string {
	if x != nil {
		return x.Caller
	}
	return ""
}

type SyscallHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ctxid int64 `protobuf:"varint,1,opt,name=ctxid,proto3" json:"ctxid,omitempty"`
}

func (x *SyscallHeader) Reset() {
	*x = SyscallHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyscallHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyscallHeader) ProtoMessage() {}

func (x *SyscallHeader) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyscallHeader.ProtoReflect.Descriptor instead.
func (*SyscallHeader) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{15}
}

func (x *SyscallHeader) GetCtxid() int64 {
	if x != nil {
		return x.Ctxid
	}
	return 0
}

type PutRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *SyscallHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Key    []byte         `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Value  []byte         `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *PutRequest) Reset() {
	*x = PutRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutRequest) ProtoMessage() {}

func (x *PutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutRequest.ProtoReflect.Descriptor instead.
func (*PutRequest) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{16}
}

func (x *PutRequest) GetHeader() *SyscallHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *PutRequest) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *PutRequest) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type PutResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PutResponse) Reset() {
	*x = PutResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutResponse) ProtoMessage() {}

func (x *PutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutResponse.ProtoReflect.Descriptor instead.
func (*PutResponse) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{17}
}

type GetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *SyscallHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Key    []byte         `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{18}
}

func (x *GetRequest) GetHeader() *SyscallHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *GetRequest) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type GetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GetResponse) Reset() {
	*x = GetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponse) ProtoMessage() {}

func (x *GetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponse.ProtoReflect.Descriptor instead.
func (*GetResponse) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{19}
}

func (x *GetResponse) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type DeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *SyscallHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Key    []byte         `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteRequest) GetHeader() *SyscallHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *DeleteRequest) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type DeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteResponse) Reset() {
	*x = DeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponse) ProtoMessage() {}

func (x *DeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponse.ProtoReflect.Descriptor instead.
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{21}
}

type IteratorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *SyscallHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// start和limit为[start, limit)
	Start []byte `protobuf:"bytes,2,opt,name=start,proto3" json:"start,omitempty"`
	Limit []byte `protobuf:"bytes,3,opt,name=limit,proto3" json:"limit,omitempty"`
	// cap代表一次请求的最大IteratorItem个数，如果为0则采用xchain的默认配置
	Cap int32 `protobuf:"varint,4,opt,name=cap,proto3" json:"cap,omitempty"`
}

func (x *IteratorRequest) Reset() {
	*x = IteratorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IteratorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IteratorRequest) ProtoMessage() {}

func (x *IteratorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IteratorRequest.ProtoReflect.Descriptor instead.
func (*IteratorRequest) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{22}
}

func (x *IteratorRequest) GetHeader() *SyscallHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *IteratorRequest) GetStart() []byte {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *IteratorRequest) GetLimit() []byte {
	if x != nil {
		return x.Limit
	}
	return nil
}

func (x *IteratorRequest) GetCap() int32 {
	if x != nil {
		return x.Cap
	}
	return 0
}

type IteratorItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *IteratorItem) Reset() {
	*x = IteratorItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IteratorItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IteratorItem) ProtoMessage() {}

func (x *IteratorItem) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IteratorItem.ProtoReflect.Descriptor instead.
func (*IteratorItem) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{23}
}

func (x *IteratorItem) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *IteratorItem) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type IteratorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*IteratorItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *IteratorResponse) Reset() {
	*x = IteratorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IteratorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IteratorResponse) ProtoMessage() {}

func (x *IteratorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IteratorResponse.ProtoReflect.Descriptor instead.
func (*IteratorResponse) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{24}
}

func (x *IteratorResponse) GetItems() []*IteratorItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type QueryTxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *SyscallHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Txid   string         `protobuf:"bytes,2,opt,name=txid,proto3" json:"txid,omitempty"`
}

func (x *QueryTxRequest) Reset() {
	*x = QueryTxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryTxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTxRequest) ProtoMessage() {}

func (x *QueryTxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryTxRequest.ProtoReflect.Descriptor instead.
func (*QueryTxRequest) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{25}
}

func (x *QueryTxRequest) GetHeader() *SyscallHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *QueryTxRequest) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

type QueryTxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// defined in user code
	Tx *Transaction `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
}

func (x *QueryTxResponse) Reset() {
	*x = QueryTxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryTxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTxResponse) ProtoMessage() {}

func (x *QueryTxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryTxResponse.ProtoReflect.Descriptor instead.
func (*QueryTxResponse) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{26}
}

func (x *QueryTxResponse) GetTx() *Transaction {
	if x != nil {
		return x.Tx
	}
	return nil
}

type QueryBlockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header  *SyscallHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Blockid string         `protobuf:"bytes,2,opt,name=blockid,proto3" json:"blockid,omitempty"`
}

func (x *QueryBlockRequest) Reset() {
	*x = QueryBlockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryBlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryBlockRequest) ProtoMessage() {}

func (x *QueryBlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryBlockRequest.ProtoReflect.Descriptor instead.
func (*QueryBlockRequest) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{27}
}

func (x *QueryBlockRequest) GetHeader() *SyscallHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *QueryBlockRequest) GetBlockid() string {
	if x != nil {
		return x.Blockid
	}
	return ""
}

type QueryBlockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// defined in user code
	Block *Block `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
}

func (x *QueryBlockResponse) Reset() {
	*x = QueryBlockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryBlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryBlockResponse) ProtoMessage() {}

func (x *QueryBlockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryBlockResponse.ProtoReflect.Descriptor instead.
func (*QueryBlockResponse) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{28}
}

func (x *QueryBlockResponse) GetBlock() *Block {
	if x != nil {
		return x.Block
	}
	return nil
}

type TransferRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *SyscallHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	From   string         `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To     string         `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	Amount string         `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *TransferRequest) Reset() {
	*x = TransferRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferRequest) ProtoMessage() {}

func (x *TransferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferRequest.ProtoReflect.Descriptor instead.
func (*TransferRequest) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{29}
}

func (x *TransferRequest) GetHeader() *SyscallHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *TransferRequest) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *TransferRequest) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *TransferRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type TransferResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TransferResponse) Reset() {
	*x = TransferResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferResponse) ProtoMessage() {}

func (x *TransferResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferResponse.ProtoReflect.Descriptor instead.
func (*TransferResponse) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{30}
}

type ContractCallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header   *SyscallHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Module   string         `protobuf:"bytes,2,opt,name=module,proto3" json:"module,omitempty"`
	Contract string         `protobuf:"bytes,3,opt,name=contract,proto3" json:"contract,omitempty"`
	Method   string         `protobuf:"bytes,4,opt,name=method,proto3" json:"method,omitempty"`
	Args     []*ArgPair     `protobuf:"bytes,5,rep,name=args,proto3" json:"args,omitempty"`
}

func (x *ContractCallRequest) Reset() {
	*x = ContractCallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractCallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractCallRequest) ProtoMessage() {}

func (x *ContractCallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractCallRequest.ProtoReflect.Descriptor instead.
func (*ContractCallRequest) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{31}
}

func (x *ContractCallRequest) GetHeader() *SyscallHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *ContractCallRequest) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

func (x *ContractCallRequest) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

func (x *ContractCallRequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *ContractCallRequest) GetArgs() []*ArgPair {
	if x != nil {
		return x.Args
	}
	return nil
}

type ContractCallResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *Response `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *ContractCallResponse) Reset() {
	*x = ContractCallResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractCallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractCallResponse) ProtoMessage() {}

func (x *ContractCallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractCallResponse.ProtoReflect.Descriptor instead.
func (*ContractCallResponse) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{32}
}

func (x *ContractCallResponse) GetResponse() *Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type CrossContractQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *SyscallHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Uri    string         `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	Args   []*ArgPair     `protobuf:"bytes,5,rep,name=args,proto3" json:"args,omitempty"`
}

func (x *CrossContractQueryRequest) Reset() {
	*x = CrossContractQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CrossContractQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrossContractQueryRequest) ProtoMessage() {}

func (x *CrossContractQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrossContractQueryRequest.ProtoReflect.Descriptor instead.
func (*CrossContractQueryRequest) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{33}
}

func (x *CrossContractQueryRequest) GetHeader() *SyscallHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *CrossContractQueryRequest) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *CrossContractQueryRequest) GetArgs() []*ArgPair {
	if x != nil {
		return x.Args
	}
	return nil
}

type CrossContractQueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *Response `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *CrossContractQueryResponse) Reset() {
	*x = CrossContractQueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CrossContractQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrossContractQueryResponse) ProtoMessage() {}

func (x *CrossContractQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrossContractQueryResponse.ProtoReflect.Descriptor instead.
func (*CrossContractQueryResponse) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{34}
}

func (x *CrossContractQueryResponse) GetResponse() *Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Body    []byte `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{35}
}

func (x *Response) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Response) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Response) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

type SetOutputRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header   *SyscallHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Response *Response      `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *SetOutputRequest) Reset() {
	*x = SetOutputRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetOutputRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetOutputRequest) ProtoMessage() {}

func (x *SetOutputRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetOutputRequest.ProtoReflect.Descriptor instead.
func (*SetOutputRequest) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{36}
}

func (x *SetOutputRequest) GetHeader() *SyscallHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *SetOutputRequest) GetResponse() *Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type SetOutputResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetOutputResponse) Reset() {
	*x = SetOutputResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetOutputResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetOutputResponse) ProtoMessage() {}

func (x *SetOutputResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetOutputResponse.ProtoReflect.Descriptor instead.
func (*SetOutputResponse) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{37}
}

type GetCallArgsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *SyscallHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
}

func (x *GetCallArgsRequest) Reset() {
	*x = GetCallArgsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCallArgsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCallArgsRequest) ProtoMessage() {}

func (x *GetCallArgsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCallArgsRequest.ProtoReflect.Descriptor instead.
func (*GetCallArgsRequest) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{38}
}

func (x *GetCallArgsRequest) GetHeader() *SyscallHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

// 扩展输入
type TxInputExt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bucket    string `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Key       []byte `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	RefTxid   []byte `protobuf:"bytes,3,opt,name=ref_txid,json=refTxid,proto3" json:"ref_txid,omitempty"`
	RefOffset int32  `protobuf:"varint,4,opt,name=ref_offset,json=refOffset,proto3" json:"ref_offset,omitempty"`
}

func (x *TxInputExt) Reset() {
	*x = TxInputExt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxInputExt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxInputExt) ProtoMessage() {}

func (x *TxInputExt) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxInputExt.ProtoReflect.Descriptor instead.
func (*TxInputExt) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{39}
}

func (x *TxInputExt) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *TxInputExt) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *TxInputExt) GetRefTxid() []byte {
	if x != nil {
		return x.RefTxid
	}
	return nil
}

func (x *TxInputExt) GetRefOffset() int32 {
	if x != nil {
		return x.RefOffset
	}
	return 0
}

// 扩展输出
type TxOutputExt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bucket string `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Key    []byte `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Value  []byte `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *TxOutputExt) Reset() {
	*x = TxOutputExt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxOutputExt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxOutputExt) ProtoMessage() {}

func (x *TxOutputExt) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxOutputExt.ProtoReflect.Descriptor instead.
func (*TxOutputExt) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{40}
}

func (x *TxOutputExt) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *TxOutputExt) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *TxOutputExt) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// Transaction input
type TxInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The transaction id referenced to
	RefTxid []byte `protobuf:"bytes,1,opt,name=ref_txid,json=refTxid,proto3" json:"ref_txid,omitempty"`
	// The output offset of the transaction referenced to
	RefOffset int32 `protobuf:"varint,2,opt,name=ref_offset,json=refOffset,proto3" json:"ref_offset,omitempty"`
	// The address of the launcher
	FromAddr []byte `protobuf:"bytes,5,opt,name=from_addr,json=fromAddr,proto3" json:"from_addr,omitempty"`
	// The amount of the transaction
	Amount []byte `protobuf:"bytes,6,opt,name=amount,proto3" json:"amount,omitempty"`
	// Frozen height
	FrozenHeight int64 `protobuf:"varint,7,opt,name=frozen_height,json=frozenHeight,proto3" json:"frozen_height,omitempty"`
}

func (x *TxInput) Reset() {
	*x = TxInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxInput) ProtoMessage() {}

func (x *TxInput) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxInput.ProtoReflect.Descriptor instead.
func (*TxInput) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{41}
}

func (x *TxInput) GetRefTxid() []byte {
	if x != nil {
		return x.RefTxid
	}
	return nil
}

func (x *TxInput) GetRefOffset() int32 {
	if x != nil {
		return x.RefOffset
	}
	return 0
}

func (x *TxInput) GetFromAddr() []byte {
	if x != nil {
		return x.FromAddr
	}
	return nil
}

func (x *TxInput) GetAmount() []byte {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *TxInput) GetFrozenHeight() int64 {
	if x != nil {
		return x.FrozenHeight
	}
	return 0
}

// Transaction output
type TxOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The amount of the transaction
	Amount []byte `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
	// The address of the launcher
	ToAddr []byte `protobuf:"bytes,2,opt,name=to_addr,json=toAddr,proto3" json:"to_addr,omitempty"`
	// Fronzen height
	FrozenHeight int64 `protobuf:"varint,4,opt,name=frozen_height,json=frozenHeight,proto3" json:"frozen_height,omitempty"`
}

func (x *TxOutput) Reset() {
	*x = TxOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxOutput) ProtoMessage() {}

func (x *TxOutput) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxOutput.ProtoReflect.Descriptor instead.
func (*TxOutput) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{42}
}

func (x *TxOutput) GetAmount() []byte {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *TxOutput) GetToAddr() []byte {
	if x != nil {
		return x.ToAddr
	}
	return nil
}

func (x *TxOutput) GetFrozenHeight() int64 {
	if x != nil {
		return x.FrozenHeight
	}
	return 0
}

// The block struct
type Block struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// blockid generate the hash sign of the block used by sha256
	Blockid string `protobuf:"bytes,3,opt,name=blockid,proto3" json:"blockid,omitempty"`
	// pre_hash is the parent blockid of the block
	PreHash string `protobuf:"bytes,4,opt,name=pre_hash,json=preHash,proto3" json:"pre_hash,omitempty"`
	// The miner id
	Proposer []byte `protobuf:"bytes,5,opt,name=proposer,proto3" json:"proposer,omitempty"`
	// The sign which miner signed: blockid + nonce + timestamp
	Sign string `protobuf:"bytes,6,opt,name=sign,proto3" json:"sign,omitempty"`
	// The pk of the miner
	Pubkey []byte `protobuf:"bytes,7,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	// The height of the blockchain
	Height int64 `protobuf:"varint,9,opt,name=height,proto3" json:"height,omitempty"`
	// Timestamp of the block
	Timestamp int64 `protobuf:"varint,10,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Transactions of the block, only txid stored on kv, the detail information stored in another table
	Txids []string `protobuf:"bytes,11,rep,name=txids,proto3" json:"txids,omitempty"`
	// The transaction count of the block
	TxCount int32 `protobuf:"varint,12,opt,name=tx_count,json=txCount,proto3" json:"tx_count,omitempty"`
	//下面的属性会动态变化
	// If the block is on the trunk
	InTrunk bool `protobuf:"varint,14,opt,name=in_trunk,json=inTrunk,proto3" json:"in_trunk,omitempty"`
	// Next next block which on trunk
	NextHash string `protobuf:"bytes,15,opt,name=next_hash,json=nextHash,proto3" json:"next_hash,omitempty"`
}

func (x *Block) Reset() {
	*x = Block{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block) ProtoMessage() {}

func (x *Block) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block.ProtoReflect.Descriptor instead.
func (*Block) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{43}
}

func (x *Block) GetBlockid() string {
	if x != nil {
		return x.Blockid
	}
	return ""
}

func (x *Block) GetPreHash() string {
	if x != nil {
		return x.PreHash
	}
	return ""
}

func (x *Block) GetProposer() []byte {
	if x != nil {
		return x.Proposer
	}
	return nil
}

func (x *Block) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *Block) GetPubkey() []byte {
	if x != nil {
		return x.Pubkey
	}
	return nil
}

func (x *Block) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Block) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Block) GetTxids() []string {
	if x != nil {
		return x.Txids
	}
	return nil
}

func (x *Block) GetTxCount() int32 {
	if x != nil {
		return x.TxCount
	}
	return 0
}

func (x *Block) GetInTrunk() bool {
	if x != nil {
		return x.InTrunk
	}
	return false
}

func (x *Block) GetNextHash() string {
	if x != nil {
		return x.NextHash
	}
	return ""
}

type GetAccountAddressesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header  *SyscallHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Account string         `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
}

func (x *GetAccountAddressesRequest) Reset() {
	*x = GetAccountAddressesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountAddressesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountAddressesRequest) ProtoMessage() {}

func (x *GetAccountAddressesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountAddressesRequest.ProtoReflect.Descriptor instead.
func (*GetAccountAddressesRequest) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{44}
}

func (x *GetAccountAddressesRequest) GetHeader() *SyscallHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *GetAccountAddressesRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

type GetAccountAddressesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addresses []string `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *GetAccountAddressesResponse) Reset() {
	*x = GetAccountAddressesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountAddressesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountAddressesResponse) ProtoMessage() {}

func (x *GetAccountAddressesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountAddressesResponse.ProtoReflect.Descriptor instead.
func (*GetAccountAddressesResponse) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{45}
}

func (x *GetAccountAddressesResponse) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type PostLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *SyscallHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Entry  string         `protobuf:"bytes,2,opt,name=entry,proto3" json:"entry,omitempty"`
}

func (x *PostLogRequest) Reset() {
	*x = PostLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostLogRequest) ProtoMessage() {}

func (x *PostLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostLogRequest.ProtoReflect.Descriptor instead.
func (*PostLogRequest) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{46}
}

func (x *PostLogRequest) GetHeader() *SyscallHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *PostLogRequest) GetEntry() string {
	if x != nil {
		return x.Entry
	}
	return ""
}

type PostLogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entry string `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
}

func (x *PostLogResponse) Reset() {
	*x = PostLogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostLogResponse) ProtoMessage() {}

func (x *PostLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostLogResponse.ProtoReflect.Descriptor instead.
func (*PostLogResponse) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{47}
}

func (x *PostLogResponse) GetEntry() string {
	if x != nil {
		return x.Entry
	}
	return ""
}

type EmitEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *SyscallHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Name   string         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Body   []byte         `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *EmitEventRequest) Reset() {
	*x = EmitEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmitEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmitEventRequest) ProtoMessage() {}

func (x *EmitEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmitEventRequest.ProtoReflect.Descriptor instead.
func (*EmitEventRequest) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{48}
}

func (x *EmitEventRequest) GetHeader() *SyscallHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *EmitEventRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EmitEventRequest) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

type EmitEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmitEventResponse) Reset() {
	*x = EmitEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmitEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmitEventResponse) ProtoMessage() {}

func (x *EmitEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmitEventResponse.ProtoReflect.Descriptor instead.
func (*EmitEventResponse) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{49}
}

// QCSignInfos is the signs of the leader gathered from replicas of a specifically certType.
// A slice of signs is used at present.
// TODO @qizheng09: It will be change to Threshold-Signatures after
// Crypto lib support Threshold-Signatures.
type QCSignInfos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// QCSignInfos
	QCSignInfos []*SignInfo `protobuf:"bytes,1,rep,name=QCSignInfos,proto3" json:"QCSignInfos,omitempty"`
}

func (x *QCSignInfos) Reset() {
	*x = QCSignInfos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QCSignInfos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QCSignInfos) ProtoMessage() {}

func (x *QCSignInfos) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QCSignInfos.ProtoReflect.Descriptor instead.
func (*QCSignInfos) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{50}
}

func (x *QCSignInfos) GetQCSignInfos() []*SignInfo {
	if x != nil {
		return x.QCSignInfos
	}
	return nil
}

// SignInfo is the signature information of the
type SignInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address   string `protobuf:"bytes,1,opt,name=Address,proto3" json:"Address,omitempty"`
	PublicKey string `protobuf:"bytes,2,opt,name=PublicKey,proto3" json:"PublicKey,omitempty"`
	Sign      []byte `protobuf:"bytes,3,opt,name=Sign,proto3" json:"Sign,omitempty"`
}

func (x *SignInfo) Reset() {
	*x = SignInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignInfo) ProtoMessage() {}

func (x *SignInfo) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignInfo.ProtoReflect.Descriptor instead.
func (*SignInfo) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{51}
}

func (x *SignInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *SignInfo) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *SignInfo) GetSign() []byte {
	if x != nil {
		return x.Sign
	}
	return nil
}

// QuorumCert is a data type that combines a collection of signatures from replicas.
type QuorumCert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of Proposal this QC certified.
	ProposalId []byte `protobuf:"bytes,1,opt,name=ProposalId,proto3" json:"ProposalId,omitempty"`
	// The msg of Proposal this QC certified.
	ProposalMsg []byte `protobuf:"bytes,2,opt,name=ProposalMsg,proto3" json:"ProposalMsg,omitempty"`
	// The current type of this QC certified.
	// the type contains `NEW_VIEW`, `PREPARE`
	Type QCState `protobuf:"varint,3,opt,name=Type,proto3,enum=protos.QCState" json:"Type,omitempty"`
	// The view number of this QC certified.
	ViewNumber int64 `protobuf:"varint,4,opt,name=ViewNumber,proto3" json:"ViewNumber,omitempty"`
	// SignInfos is the signs of the leader gathered from replicas
	// of a specifically certType.
	SignInfos *QCSignInfos `protobuf:"bytes,5,opt,name=SignInfos,proto3" json:"SignInfos,omitempty"`
}

func (x *QuorumCert) Reset() {
	*x = QuorumCert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuorumCert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuorumCert) ProtoMessage() {}

func (x *QuorumCert) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuorumCert.ProtoReflect.Descriptor instead.
func (*QuorumCert) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{52}
}

func (x *QuorumCert) GetProposalId() []byte {
	if x != nil {
		return x.ProposalId
	}
	return nil
}

func (x *QuorumCert) GetProposalMsg() []byte {
	if x != nil {
		return x.ProposalMsg
	}
	return nil
}

func (x *QuorumCert) GetType() QCState {
	if x != nil {
		return x.Type
	}
	return QCState_NEW_VIEW
}

func (x *QuorumCert) GetViewNumber() int64 {
	if x != nil {
		return x.ViewNumber
	}
	return 0
}

func (x *QuorumCert) GetSignInfos() *QCSignInfos {
	if x != nil {
		return x.SignInfos
	}
	return nil
}

type HDInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// HDPublickey
	HdPublicKey []byte `protobuf:"bytes,1,opt,name=hd_public_key,json=hdPublicKey,proto3" json:"hd_public_key,omitempty"`
	// original_hash
	OriginalHash []byte `protobuf:"bytes,2,opt,name=original_hash,json=originalHash,proto3" json:"original_hash,omitempty"`
}

func (x *HDInfo) Reset() {
	*x = HDInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HDInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HDInfo) ProtoMessage() {}

func (x *HDInfo) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HDInfo.ProtoReflect.Descriptor instead.
func (*HDInfo) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{53}
}

func (x *HDInfo) GetHdPublicKey() []byte {
	if x != nil {
		return x.HdPublicKey
	}
	return nil
}

func (x *HDInfo) GetOriginalHash() []byte {
	if x != nil {
		return x.OriginalHash
	}
	return nil
}

// Unified Xuper Signature
type XuperSignature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKeys [][]byte `protobuf:"bytes,1,rep,name=public_keys,json=publicKeys,proto3" json:"public_keys,omitempty"`
	Signature  []byte   `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *XuperSignature) Reset() {
	*x = XuperSignature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XuperSignature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XuperSignature) ProtoMessage() {}

func (x *XuperSignature) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XuperSignature.ProtoReflect.Descriptor instead.
func (*XuperSignature) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{54}
}

func (x *XuperSignature) GetPublicKeys() [][]byte {
	if x != nil {
		return x.PublicKeys
	}
	return nil
}

func (x *XuperSignature) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

// Transaction is the information of the transaction
type Transaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// txid is the id of this transaction
	Txid []byte `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	// the blockid the transaction belong to
	Blockid []byte `protobuf:"bytes,2,opt,name=blockid,proto3" json:"blockid,omitempty"`
	// Transaction input list
	TxInputs []*TxInput `protobuf:"bytes,3,rep,name=tx_inputs,json=txInputs,proto3" json:"tx_inputs,omitempty"`
	// Transaction output list
	TxOutputs []*TxOutput `protobuf:"bytes,4,rep,name=tx_outputs,json=txOutputs,proto3" json:"tx_outputs,omitempty"`
	// Transaction description or system contract
	Desc []byte `protobuf:"bytes,6,opt,name=desc,proto3" json:"desc,omitempty"`
	// Mining rewards
	Coinbase bool `protobuf:"varint,7,opt,name=coinbase,proto3" json:"coinbase,omitempty"`
	// Random number used to avoid replay attacks
	Nonce string `protobuf:"bytes,8,opt,name=nonce,proto3" json:"nonce,omitempty"`
	// Timestamp to launch the transaction
	Timestamp int64 `protobuf:"varint,9,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// tx format version; tx格式版本号
	Version int32 `protobuf:"varint,10,opt,name=version,proto3" json:"version,omitempty"`
	// auto generated tx
	Autogen          bool             `protobuf:"varint,11,opt,name=autogen,proto3" json:"autogen,omitempty"`
	TxInputsExt      []*TxInputExt    `protobuf:"bytes,23,rep,name=tx_inputs_ext,json=txInputsExt,proto3" json:"tx_inputs_ext,omitempty"`
	TxOutputsExt     []*TxOutputExt   `protobuf:"bytes,24,rep,name=tx_outputs_ext,json=txOutputsExt,proto3" json:"tx_outputs_ext,omitempty"`
	ContractRequests []*InvokeRequest `protobuf:"bytes,25,rep,name=contract_requests,json=contractRequests,proto3" json:"contract_requests,omitempty"`
	// 权限系统新增字段
	// 交易发起者, 可以是一个Address或者一个Account
	Initiator string `protobuf:"bytes,26,opt,name=initiator,proto3" json:"initiator,omitempty"`
	// 交易发起需要被收集签名的AddressURL集合信息，包括用于utxo转账和用于合约调用
	AuthRequire []string `protobuf:"bytes,27,rep,name=auth_require,json=authRequire,proto3" json:"auth_require,omitempty"`
	// 交易发起者对交易元数据签名，签名的内容包括auth_require字段
	InitiatorSigns []*SignatureInfo `protobuf:"bytes,28,rep,name=initiator_signs,json=initiatorSigns,proto3" json:"initiator_signs,omitempty"`
	// 收集到的签名
	AuthRequireSigns []*SignatureInfo `protobuf:"bytes,29,rep,name=auth_require_signs,json=authRequireSigns,proto3" json:"auth_require_signs,omitempty"`
	// 节点收到tx的时间戳，不参与签名
	ReceivedTimestamp int64 `protobuf:"varint,30,opt,name=received_timestamp,json=receivedTimestamp,proto3" json:"received_timestamp,omitempty"`
	// 统一签名(支持多重签名/环签名等，与initiator_signs/auth_require_signs不同时使用)
	XuperSign *XuperSignature `protobuf:"bytes,31,opt,name=xuper_sign,json=xuperSign,proto3" json:"xuper_sign,omitempty"`
	// 可修改区块链标记
	ModifyBlock *ModifyBlock `protobuf:"bytes,32,opt,name=modify_block,json=modifyBlock,proto3" json:"modify_block,omitempty"`
	// HD加解密相关信息
	HDInfo *HDInfo `protobuf:"bytes,33,opt,name=HD_info,json=HDInfo,proto3" json:"HD_info,omitempty"`
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{55}
}

func (x *Transaction) GetTxid() []byte {
	if x != nil {
		return x.Txid
	}
	return nil
}

func (x *Transaction) GetBlockid() []byte {
	if x != nil {
		return x.Blockid
	}
	return nil
}

func (x *Transaction) GetTxInputs() []*TxInput {
	if x != nil {
		return x.TxInputs
	}
	return nil
}

func (x *Transaction) GetTxOutputs() []*TxOutput {
	if x != nil {
		return x.TxOutputs
	}
	return nil
}

func (x *Transaction) GetDesc() []byte {
	if x != nil {
		return x.Desc
	}
	return nil
}

func (x *Transaction) GetCoinbase() bool {
	if x != nil {
		return x.Coinbase
	}
	return false
}

func (x *Transaction) GetNonce() string {
	if x != nil {
		return x.Nonce
	}
	return ""
}

func (x *Transaction) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Transaction) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Transaction) GetAutogen() bool {
	if x != nil {
		return x.Autogen
	}
	return false
}

func (x *Transaction) GetTxInputsExt() []*TxInputExt {
	if x != nil {
		return x.TxInputsExt
	}
	return nil
}

func (x *Transaction) GetTxOutputsExt() []*TxOutputExt {
	if x != nil {
		return x.TxOutputsExt
	}
	return nil
}

func (x *Transaction) GetContractRequests() []*InvokeRequest {
	if x != nil {
		return x.ContractRequests
	}
	return nil
}

func (x *Transaction) GetInitiator() string {
	if x != nil {
		return x.Initiator
	}
	return ""
}

func (x *Transaction) GetAuthRequire() []string {
	if x != nil {
		return x.AuthRequire
	}
	return nil
}

func (x *Transaction) GetInitiatorSigns() []*SignatureInfo {
	if x != nil {
		return x.InitiatorSigns
	}
	return nil
}

func (x *Transaction) GetAuthRequireSigns() []*SignatureInfo {
	if x != nil {
		return x.AuthRequireSigns
	}
	return nil
}

func (x *Transaction) GetReceivedTimestamp() int64 {
	if x != nil {
		return x.ReceivedTimestamp
	}
	return 0
}

func (x *Transaction) GetXuperSign() *XuperSignature {
	if x != nil {
		return x.XuperSign
	}
	return nil
}

func (x *Transaction) GetModifyBlock() *ModifyBlock {
	if x != nil {
		return x.ModifyBlock
	}
	return nil
}

func (x *Transaction) GetHDInfo() *HDInfo {
	if x != nil {
		return x.HDInfo
	}
	return nil
}

// Ledger metadata
type LedgerMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// root block id
	RootBlockid []byte `protobuf:"bytes,1,opt,name=root_blockid,json=rootBlockid,proto3" json:"root_blockid,omitempty"`
	// tip block id
	TipBlockid []byte `protobuf:"bytes,2,opt,name=tip_blockid,json=tipBlockid,proto3" json:"tip_blockid,omitempty"`
	// the height of the trunk
	TrunkHeight int64 `protobuf:"varint,3,opt,name=trunk_height,json=trunkHeight,proto3" json:"trunk_height,omitempty"`
}

func (x *LedgerMeta) Reset() {
	*x = LedgerMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LedgerMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LedgerMeta) ProtoMessage() {}

func (x *LedgerMeta) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LedgerMeta.ProtoReflect.Descriptor instead.
func (*LedgerMeta) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{56}
}

func (x *LedgerMeta) GetRootBlockid() []byte {
	if x != nil {
		return x.RootBlockid
	}
	return nil
}

func (x *LedgerMeta) GetTipBlockid() []byte {
	if x != nil {
		return x.TipBlockid
	}
	return nil
}

func (x *LedgerMeta) GetTrunkHeight() int64 {
	if x != nil {
		return x.TrunkHeight
	}
	return 0
}

// Utxo metadata
type UtxoMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// utxo vm目前执行到的blockid
	LatestBlockid []byte   `protobuf:"bytes,1,opt,name=latest_blockid,json=latestBlockid,proto3" json:"latest_blockid,omitempty"`
	LockKeyList   []string `protobuf:"bytes,2,rep,name=lock_key_list,json=lockKeyList,proto3" json:"lock_key_list,omitempty"`
	// 当前utxo vm上的总资产
	UtxoTotal string `protobuf:"bytes,3,opt,name=utxo_total,json=utxoTotal,proto3" json:"utxo_total,omitempty"`
	// 平均上链延时
	AvgDelay int64 `protobuf:"varint,4,opt,name=avgDelay,proto3" json:"avgDelay,omitempty"`
	// 待确认交易量
	UnconfirmTxAmount int64 `protobuf:"varint,5,opt,name=unconfirmTxAmount,proto3" json:"unconfirmTxAmount,omitempty"`
	// max block size
	MaxBlockSize int64 `protobuf:"varint,6,opt,name=max_block_size,json=maxBlockSize,proto3" json:"max_block_size,omitempty"`
	// preset contracts
	ReservedContracts []*InvokeRequest `protobuf:"bytes,7,rep,name=reserved_contracts,json=reservedContracts,proto3" json:"reserved_contracts,omitempty"`
	// reset forbidden contract configuration
	ForbiddenContract *InvokeRequest `protobuf:"bytes,8,opt,name=forbidden_contract,json=forbiddenContract,proto3" json:"forbidden_contract,omitempty"`
	// the resource amount of creating an account
	NewAccountResourceAmount int64 `protobuf:"varint,9,opt,name=new_account_resource_amount,json=newAccountResourceAmount,proto3" json:"new_account_resource_amount,omitempty"`
	// 当前不可逆区块高度，与utxo对齐
	IrreversibleBlockHeight int64 `protobuf:"varint,10,opt,name=irreversibleBlockHeight,proto3" json:"irreversibleBlockHeight,omitempty"`
	// 当前不可逆区块高度调整窗口
	IrreversibleSlideWindow int64     `protobuf:"varint,11,opt,name=irreversibleSlideWindow,proto3" json:"irreversibleSlideWindow,omitempty"`
	GasPrice                *GasPrice `protobuf:"bytes,12,opt,name=gasPrice,proto3" json:"gasPrice,omitempty"`
	// 群组合约相关
	GroupChainContract *InvokeRequest `protobuf:"bytes,13,opt,name=group_chain_contract,json=groupChainContract,proto3" json:"group_chain_contract,omitempty"`
}

func (x *UtxoMeta) Reset() {
	*x = UtxoMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UtxoMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UtxoMeta) ProtoMessage() {}

func (x *UtxoMeta) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UtxoMeta.ProtoReflect.Descriptor instead.
func (*UtxoMeta) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{57}
}

func (x *UtxoMeta) GetLatestBlockid() []byte {
	if x != nil {
		return x.LatestBlockid
	}
	return nil
}

func (x *UtxoMeta) GetLockKeyList() []string {
	if x != nil {
		return x.LockKeyList
	}
	return nil
}

func (x *UtxoMeta) GetUtxoTotal() string {
	if x != nil {
		return x.UtxoTotal
	}
	return ""
}

func (x *UtxoMeta) GetAvgDelay() int64 {
	if x != nil {
		return x.AvgDelay
	}
	return 0
}

func (x *UtxoMeta) GetUnconfirmTxAmount() int64 {
	if x != nil {
		return x.UnconfirmTxAmount
	}
	return 0
}

func (x *UtxoMeta) GetMaxBlockSize() int64 {
	if x != nil {
		return x.MaxBlockSize
	}
	return 0
}

func (x *UtxoMeta) GetReservedContracts() []*InvokeRequest {
	if x != nil {
		return x.ReservedContracts
	}
	return nil
}

func (x *UtxoMeta) GetForbiddenContract() *InvokeRequest {
	if x != nil {
		return x.ForbiddenContract
	}
	return nil
}

func (x *UtxoMeta) GetNewAccountResourceAmount() int64 {
	if x != nil {
		return x.NewAccountResourceAmount
	}
	return 0
}

func (x *UtxoMeta) GetIrreversibleBlockHeight() int64 {
	if x != nil {
		return x.IrreversibleBlockHeight
	}
	return 0
}

func (x *UtxoMeta) GetIrreversibleSlideWindow() int64 {
	if x != nil {
		return x.IrreversibleSlideWindow
	}
	return 0
}

func (x *UtxoMeta) GetGasPrice() *GasPrice {
	if x != nil {
		return x.GasPrice
	}
	return nil
}

func (x *UtxoMeta) GetGroupChainContract() *InvokeRequest {
	if x != nil {
		return x.GroupChainContract
	}
	return nil
}

// The internal block struct
type InternalBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// block version
	Version int32 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	// Random number used to avoid replay attacks
	Nonce int32 `protobuf:"varint,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
	// blockid generate the hash sign of the block used by sha256
	Blockid []byte `protobuf:"bytes,3,opt,name=blockid,proto3" json:"blockid,omitempty"`
	// pre_hash is the parent blockid of the block
	PreHash []byte `protobuf:"bytes,4,opt,name=pre_hash,json=preHash,proto3" json:"pre_hash,omitempty"`
	// The miner id
	Proposer []byte `protobuf:"bytes,5,opt,name=proposer,proto3" json:"proposer,omitempty"`
	// The sign which miner signed: blockid + nonce + timestamp
	Sign []byte `protobuf:"bytes,6,opt,name=sign,proto3" json:"sign,omitempty"`
	// The pk of the miner
	Pubkey []byte `protobuf:"bytes,7,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	// The Merkle Tree root
	MerkleRoot []byte `protobuf:"bytes,8,opt,name=merkle_root,json=merkleRoot,proto3" json:"merkle_root,omitempty"`
	// The height of the blockchain
	Height int64 `protobuf:"varint,9,opt,name=height,proto3" json:"height,omitempty"`
	// Timestamp of the block
	Timestamp int64 `protobuf:"varint,10,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Transactions of the block, only txid stored on kv, the detail information
	// stored in another table
	Transactions []*Transaction `protobuf:"bytes,11,rep,name=transactions,proto3" json:"transactions,omitempty"`
	// The transaction count of the block
	TxCount int32 `protobuf:"varint,12,opt,name=tx_count,json=txCount,proto3" json:"tx_count,omitempty"`
	// 所有交易hash的merkle tree
	MerkleTree  [][]byte          `protobuf:"bytes,13,rep,name=merkle_tree,json=merkleTree,proto3" json:"merkle_tree,omitempty"`
	CurTerm     int64             `protobuf:"varint,16,opt,name=curTerm,proto3" json:"curTerm,omitempty"`
	CurBlockNum int64             `protobuf:"varint,17,opt,name=curBlockNum,proto3" json:"curBlockNum,omitempty"`
	FailedTxs   map[string]string `protobuf:"bytes,18,rep,name=failed_txs,json=failedTxs,proto3" json:"failed_txs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // txid -> failed reason
	TargetBits  int32             `protobuf:"varint,19,opt,name=targetBits,proto3" json:"targetBits,omitempty"`
	// Justify used in chained-bft
	Justify *QuorumCert `protobuf:"bytes,20,opt,name=Justify,proto3" json:"Justify,omitempty"`
	// 下面的属性会动态变化
	// If the block is on the trunk
	InTrunk bool `protobuf:"varint,14,opt,name=in_trunk,json=inTrunk,proto3" json:"in_trunk,omitempty"`
	// Next next block which on trunk
	NextHash []byte `protobuf:"bytes,15,opt,name=next_hash,json=nextHash,proto3" json:"next_hash,omitempty"`
}

func (x *InternalBlock) Reset() {
	*x = InternalBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InternalBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InternalBlock) ProtoMessage() {}

func (x *InternalBlock) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InternalBlock.ProtoReflect.Descriptor instead.
func (*InternalBlock) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{58}
}

func (x *InternalBlock) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *InternalBlock) GetNonce() int32 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *InternalBlock) GetBlockid() []byte {
	if x != nil {
		return x.Blockid
	}
	return nil
}

func (x *InternalBlock) GetPreHash() []byte {
	if x != nil {
		return x.PreHash
	}
	return nil
}

func (x *InternalBlock) GetProposer() []byte {
	if x != nil {
		return x.Proposer
	}
	return nil
}

func (x *InternalBlock) GetSign() []byte {
	if x != nil {
		return x.Sign
	}
	return nil
}

func (x *InternalBlock) GetPubkey() []byte {
	if x != nil {
		return x.Pubkey
	}
	return nil
}

func (x *InternalBlock) GetMerkleRoot() []byte {
	if x != nil {
		return x.MerkleRoot
	}
	return nil
}

func (x *InternalBlock) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *InternalBlock) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *InternalBlock) GetTransactions() []*Transaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

func (x *InternalBlock) GetTxCount() int32 {
	if x != nil {
		return x.TxCount
	}
	return 0
}

func (x *InternalBlock) GetMerkleTree() [][]byte {
	if x != nil {
		return x.MerkleTree
	}
	return nil
}

func (x *InternalBlock) GetCurTerm() int64 {
	if x != nil {
		return x.CurTerm
	}
	return 0
}

func (x *InternalBlock) GetCurBlockNum() int64 {
	if x != nil {
		return x.CurBlockNum
	}
	return 0
}

func (x *InternalBlock) GetFailedTxs() map[string]string {
	if x != nil {
		return x.FailedTxs
	}
	return nil
}

func (x *InternalBlock) GetTargetBits() int32 {
	if x != nil {
		return x.TargetBits
	}
	return 0
}

func (x *InternalBlock) GetJustify() *QuorumCert {
	if x != nil {
		return x.Justify
	}
	return nil
}

func (x *InternalBlock) GetInTrunk() bool {
	if x != nil {
		return x.InTrunk
	}
	return false
}

func (x *InternalBlock) GetNextHash() []byte {
	if x != nil {
		return x.NextHash
	}
	return nil
}

type Utxo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount    []byte `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
	ToAddr    []byte `protobuf:"bytes,2,opt,name=toAddr,proto3" json:"toAddr,omitempty"`
	ToPubkey  []byte `protobuf:"bytes,3,opt,name=toPubkey,proto3" json:"toPubkey,omitempty"`
	RefTxid   []byte `protobuf:"bytes,4,opt,name=refTxid,proto3" json:"refTxid,omitempty"`
	RefOffset int32  `protobuf:"varint,5,opt,name=refOffset,proto3" json:"refOffset,omitempty"`
}

func (x *Utxo) Reset() {
	*x = Utxo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Utxo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Utxo) ProtoMessage() {}

func (x *Utxo) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Utxo.ProtoReflect.Descriptor instead.
func (*Utxo) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{59}
}

func (x *Utxo) GetAmount() []byte {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *Utxo) GetToAddr() []byte {
	if x != nil {
		return x.ToAddr
	}
	return nil
}

func (x *Utxo) GetToPubkey() []byte {
	if x != nil {
		return x.ToPubkey
	}
	return nil
}

func (x *Utxo) GetRefTxid() []byte {
	if x != nil {
		return x.RefTxid
	}
	return nil
}

func (x *Utxo) GetRefOffset() int32 {
	if x != nil {
		return x.RefOffset
	}
	return 0
}

type ModifyBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// txid交易被effective_txid的交易提出可修改区块链的请求
	EffectiveTxid string `protobuf:"bytes,1,opt,name=effective_txid,json=effectiveTxid,proto3" json:"effective_txid,omitempty"`
	// 本交易是否已被修改标记
	Marked bool `protobuf:"varint,2,opt,name=marked,proto3" json:"marked,omitempty"`
	// txid交易被修改生效的高度
	EffectiveHeight int64 `protobuf:"varint,3,opt,name=effective_height,json=effectiveHeight,proto3" json:"effective_height,omitempty"`
	// 监管的public key
	PublicKey string `protobuf:"bytes,4,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	// 监管地址对修改的交易id的签名
	Sign string `protobuf:"bytes,5,opt,name=sign,proto3" json:"sign,omitempty"`
}

func (x *ModifyBlock) Reset() {
	*x = ModifyBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyBlock) ProtoMessage() {}

func (x *ModifyBlock) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyBlock.ProtoReflect.Descriptor instead.
func (*ModifyBlock) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{60}
}

func (x *ModifyBlock) GetEffectiveTxid() string {
	if x != nil {
		return x.EffectiveTxid
	}
	return ""
}

func (x *ModifyBlock) GetMarked() bool {
	if x != nil {
		return x.Marked
	}
	return false
}

func (x *ModifyBlock) GetEffectiveHeight() int64 {
	if x != nil {
		return x.EffectiveHeight
	}
	return 0
}

func (x *ModifyBlock) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *ModifyBlock) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

type TxDataAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 地址
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// 金额
	Amount string `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	// 冻结高度
	FrozenHeight int64 `protobuf:"varint,3,opt,name=frozen_height,json=frozenHeight,proto3" json:"frozen_height,omitempty"`
}

func (x *TxDataAccount) Reset() {
	*x = TxDataAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxDataAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxDataAccount) ProtoMessage() {}

func (x *TxDataAccount) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxDataAccount.ProtoReflect.Descriptor instead.
func (*TxDataAccount) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{61}
}

func (x *TxDataAccount) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *TxDataAccount) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *TxDataAccount) GetFrozenHeight() int64 {
	if x != nil {
		return x.FrozenHeight
	}
	return 0
}

type UtxoRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UtxoCount  string     `protobuf:"bytes,1,opt,name=utxoCount,proto3" json:"utxoCount,omitempty"`
	UtxoAmount string     `protobuf:"bytes,2,opt,name=utxoAmount,proto3" json:"utxoAmount,omitempty"`
	Item       []*UtxoKey `protobuf:"bytes,3,rep,name=item,proto3" json:"item,omitempty"`
}

func (x *UtxoRecord) Reset() {
	*x = UtxoRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UtxoRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UtxoRecord) ProtoMessage() {}

func (x *UtxoRecord) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UtxoRecord.ProtoReflect.Descriptor instead.
func (*UtxoRecord) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{62}
}

func (x *UtxoRecord) GetUtxoCount() string {
	if x != nil {
		return x.UtxoCount
	}
	return ""
}

func (x *UtxoRecord) GetUtxoAmount() string {
	if x != nil {
		return x.UtxoAmount
	}
	return ""
}

func (x *UtxoRecord) GetItem() []*UtxoKey {
	if x != nil {
		return x.Item
	}
	return nil
}

type UtxoKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefTxid string `protobuf:"bytes,1,opt,name=refTxid,proto3" json:"refTxid,omitempty"`
	Offset  string `protobuf:"bytes,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Amount  string `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *UtxoKey) Reset() {
	*x = UtxoKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UtxoKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UtxoKey) ProtoMessage() {}

func (x *UtxoKey) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UtxoKey.ProtoReflect.Descriptor instead.
func (*UtxoKey) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{63}
}

func (x *UtxoKey) GetRefTxid() string {
	if x != nil {
		return x.RefTxid
	}
	return ""
}

func (x *UtxoKey) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

func (x *UtxoKey) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type UtxoRecordDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpenUtxo   *UtxoRecord `protobuf:"bytes,1,opt,name=openUtxo,proto3" json:"openUtxo,omitempty"`
	LockedUtxo *UtxoRecord `protobuf:"bytes,2,opt,name=lockedUtxo,proto3" json:"lockedUtxo,omitempty"`
	FrozenUtxo *UtxoRecord `protobuf:"bytes,3,opt,name=frozenUtxo,proto3" json:"frozenUtxo,omitempty"`
}

func (x *UtxoRecordDetail) Reset() {
	*x = UtxoRecordDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UtxoRecordDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UtxoRecordDetail) ProtoMessage() {}

func (x *UtxoRecordDetail) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UtxoRecordDetail.ProtoReflect.Descriptor instead.
func (*UtxoRecordDetail) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{64}
}

func (x *UtxoRecordDetail) GetOpenUtxo() *UtxoRecord {
	if x != nil {
		return x.OpenUtxo
	}
	return nil
}

func (x *UtxoRecordDetail) GetLockedUtxo() *UtxoRecord {
	if x != nil {
		return x.LockedUtxo
	}
	return nil
}

func (x *UtxoRecordDetail) GetFrozenUtxo() *UtxoRecord {
	if x != nil {
		return x.FrozenUtxo
	}
	return nil
}

type BalanceDetailInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balance  string `protobuf:"bytes,1,opt,name=balance,proto3" json:"balance,omitempty"`
	IsFrozen bool   `protobuf:"varint,2,opt,name=isFrozen,proto3" json:"isFrozen,omitempty"`
}

func (x *BalanceDetailInfo) Reset() {
	*x = BalanceDetailInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalanceDetailInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceDetailInfo) ProtoMessage() {}

func (x *BalanceDetailInfo) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceDetailInfo.ProtoReflect.Descriptor instead.
func (*BalanceDetailInfo) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{65}
}

func (x *BalanceDetailInfo) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

func (x *BalanceDetailInfo) GetIsFrozen() bool {
	if x != nil {
		return x.IsFrozen
	}
	return false
}

// UtxoOutput query results
type UtxoOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// utxo list
	UtxoList []*Utxo `protobuf:"bytes,1,rep,name=utxoList,proto3" json:"utxoList,omitempty"`
	// total selected amount
	TotalSelected string `protobuf:"bytes,2,opt,name=totalSelected,proto3" json:"totalSelected,omitempty"`
}

func (x *UtxoOutput) Reset() {
	*x = UtxoOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contract_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UtxoOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UtxoOutput) ProtoMessage() {}

func (x *UtxoOutput) ProtoReflect() protoreflect.Message {
	mi := &file_contract_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UtxoOutput.ProtoReflect.Descriptor instead.
func (*UtxoOutput) Descriptor() ([]byte, []int) {
	return file_contract_proto_rawDescGZIP(), []int{66}
}

func (x *UtxoOutput) GetUtxoList() []*Utxo {
	if x != nil {
		return x.UtxoList
	}
	return nil
}

func (x *UtxoOutput) GetTotalSelected() string {
	if x != nil {
		return x.TotalSelected
	}
	return ""
}

var File_contract_proto protoreflect.FileDescriptor

var file_contract_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x1a, 0x14, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x63, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7a,
	0x0a, 0x08, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x70,
	0x75, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x70,
	0x75, 0x52, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x65, 0x6d, 0x5f, 0x72, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x64, 0x69, 0x73, 0x6b, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x69, 0x73, 0x6b, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x78, 0x66, 0x65, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x78, 0x66, 0x65, 0x65, 0x52, 0x61, 0x74, 0x65, 0x22, 0x4f, 0x0a, 0x0d, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0xbc, 0x02, 0x0a, 0x0d,
	0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x49, 0x6e, 0x76, 0x6f,
	0x6b, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x3e, 0x0a, 0x0f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x1a, 0x37, 0x0a, 0x09, 0x41, 0x72, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xf2, 0x02, 0x0a, 0x0e, 0x49,
	0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a,
	0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x78, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x45, 0x78,
	0x74, 0x52, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x12, 0x2d, 0x0a, 0x07, 0x6f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x54, 0x78, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x45, 0x78, 0x74, 0x52,
	0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x61, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64, 0x12,
	0x31, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x6b,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x73, 0x12, 0x36, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x0a, 0x75, 0x74,
	0x78, 0x6f, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x78, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52,
	0x0a, 0x75, 0x74, 0x78, 0x6f, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x12, 0x32, 0x0a, 0x0b, 0x75,
	0x74, 0x78, 0x6f, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x78, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x52, 0x0b, 0x75, 0x74, 0x78, 0x6f, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x22,
	0x58, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0xa2, 0x01, 0x0a, 0x0c, 0x57, 0x61,
	0x73, 0x6d, 0x43, 0x6f, 0x64, 0x65, 0x44, 0x65, 0x73, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x75,
	0x6e, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x72,
	0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x6d, 0x5f, 0x63,
	0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76,
	0x6d, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x53,
	0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62,
	0x6f, 0x64, 0x79, 0x22, 0x5c, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0xb2, 0x01, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x65, 0x73,
	0x63, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x0d, 0x0a, 0x0b, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x0e, 0x0a, 0x0c, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x0a, 0x11, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x43,
	0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x74,
	0x78, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x74, 0x78, 0x69, 0x64,
	0x22, 0x14, 0x0a, 0x12, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31, 0x0a, 0x07, 0x41, 0x72, 0x67, 0x50, 0x61, 0x69,
	0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xc9, 0x01, 0x0a, 0x08, 0x43, 0x61,
	0x6c, 0x6c, 0x41, 0x72, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x23,
	0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x41, 0x72, 0x67, 0x50, 0x61, 0x69, 0x72, 0x52, 0x04, 0x61,
	0x72, 0x67, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63,
	0x61, 0x6c, 0x6c, 0x65, 0x72, 0x22, 0x25, 0x0a, 0x0d, 0x53, 0x79, 0x73, 0x63, 0x61, 0x6c, 0x6c,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x74, 0x78, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x74, 0x78, 0x69, 0x64, 0x22, 0x63, 0x0a, 0x0a,
	0x50, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x06, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x53, 0x79, 0x73, 0x63, 0x61, 0x6c, 0x6c, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x0d, 0x0a, 0x0b, 0x50, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x4d, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d,
	0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53, 0x79, 0x73, 0x63, 0x61, 0x6c, 0x6c, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22,
	0x23, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x50, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53,
	0x79, 0x73, 0x63, 0x61, 0x6c, 0x6c, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x10, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7e, 0x0a, 0x0f, 0x49, 0x74, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x06, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53, 0x79, 0x73, 0x63, 0x61, 0x6c, 0x6c, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x61, 0x70, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x63, 0x61, 0x70, 0x22, 0x36, 0x0a, 0x0c, 0x49, 0x74, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x3e, 0x0a, 0x10, 0x49, 0x74, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x49, 0x74, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x22, 0x53, 0x0a, 0x0e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2d, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53, 0x79, 0x73, 0x63,
	0x61, 0x6c, 0x6c, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x78, 0x69, 0x64, 0x22, 0x36, 0x0a, 0x0f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x78,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x02, 0x74, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x02, 0x74, 0x78, 0x22, 0x5c, 0x0a,
	0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2d, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53, 0x79, 0x73, 0x63,
	0x61, 0x6c, 0x6c, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x69, 0x64, 0x22, 0x39, 0x0a, 0x12, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x23, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52,
	0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x7c, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x06, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x53, 0x79, 0x73, 0x63, 0x61, 0x6c, 0x6c, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02,
	0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x12, 0x0a, 0x10, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb5, 0x01, 0x0a, 0x13, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2d, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53, 0x79, 0x73, 0x63, 0x61, 0x6c,
	0x6c, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x23, 0x0a, 0x04, 0x61,
	0x72, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x41, 0x72, 0x67, 0x50, 0x61, 0x69, 0x72, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73,
	0x22, 0x44, 0x0a, 0x14, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x43, 0x61, 0x6c, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x81, 0x01, 0x0a, 0x19, 0x43, 0x72, 0x6f, 0x73, 0x73,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53, 0x79,
	0x73, 0x63, 0x61, 0x6c, 0x6c, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x23, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x41, 0x72, 0x67,
	0x50, 0x61, 0x69, 0x72, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x22, 0x4a, 0x0a, 0x1a, 0x43, 0x72,
	0x6f, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x50, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x6f, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x06,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53, 0x79, 0x73, 0x63, 0x61, 0x6c, 0x6c, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x08, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x53, 0x65, 0x74,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x43,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x41, 0x72, 0x67, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53, 0x79,
	0x73, 0x63, 0x61, 0x6c, 0x6c, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x22, 0x70, 0x0a, 0x0a, 0x54, 0x78, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x45, 0x78,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x72,
	0x65, 0x66, 0x5f, 0x74, 0x78, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x72,
	0x65, 0x66, 0x54, 0x78, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x66, 0x5f, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x72, 0x65, 0x66, 0x4f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x4d, 0x0a, 0x0b, 0x54, 0x78, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x45, 0x78, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x9d, 0x01, 0x0a, 0x07, 0x54, 0x78, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x72, 0x65, 0x66, 0x5f, 0x74, 0x78, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x72, 0x65, 0x66, 0x54, 0x78, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72,
	0x65, 0x66, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x72, 0x65, 0x66, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72,
	0x6f, 0x6d, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x66,
	0x72, 0x6f, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x22, 0x60, 0x0a, 0x08, 0x54, 0x78, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x6f, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x74, 0x6f, 0x41, 0x64, 0x64,
	0x72, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x5f, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e,
	0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0xa3, 0x02, 0x0a, 0x05, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x72,
	0x65, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72,
	0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a,
	0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x78, 0x69, 0x64, 0x73, 0x18, 0x0b, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x78, 0x69, 0x64, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x78, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x78, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x6e, 0x5f, 0x74, 0x72, 0x75, 0x6e, 0x6b,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x6e, 0x54, 0x72, 0x75, 0x6e, 0x6b, 0x12,
	0x1b, 0x0a, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x48, 0x61, 0x73, 0x68, 0x22, 0x65, 0x0a, 0x1a,
	0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x06, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x53, 0x79, 0x73, 0x63, 0x61, 0x6c, 0x6c, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x3b, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x22, 0x55, 0x0a, 0x0e, 0x50, 0x6f, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2d, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53, 0x79, 0x73, 0x63,
	0x61, 0x6c, 0x6c, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x27, 0x0a, 0x0f, 0x50, 0x6f, 0x73, 0x74, 0x4c,
	0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6e,
	0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79,
	0x22, 0x69, 0x0a, 0x10, 0x45, 0x6d, 0x69, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53, 0x79,
	0x73, 0x63, 0x61, 0x6c, 0x6c, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x13, 0x0a, 0x11, 0x45,
	0x6d, 0x69, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x41, 0x0a, 0x0b, 0x51, 0x43, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12,
	0x32, 0x0a, 0x0b, 0x51, 0x43, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53, 0x69,
	0x67, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x51, 0x43, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x73, 0x22, 0x56, 0x0a, 0x08, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x18, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x67, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x53, 0x69, 0x67, 0x6e, 0x22, 0xc6, 0x01, 0x0a, 0x0a,
	0x51, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x43, 0x65, 0x72, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a,
	0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0b, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x4d, 0x73, 0x67, 0x12, 0x23, 0x0a, 0x04,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x51, 0x43, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x56, 0x69, 0x65, 0x77, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x56, 0x69, 0x65, 0x77, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x31, 0x0a, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x51, 0x43,
	0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x52, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x73, 0x22, 0x51, 0x0a, 0x06, 0x48, 0x44, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22,
	0x0a, 0x0d, 0x68, 0x64, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x68, 0x64, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b,
	0x65, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x68,
	0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x6c, 0x48, 0x61, 0x73, 0x68, 0x22, 0x4f, 0x0a, 0x0e, 0x58, 0x75, 0x70, 0x65, 0x72,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0a,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0xf6, 0x06, 0x0a, 0x0b, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x74, 0x78, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x09, 0x74, 0x78, 0x5f, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x54, 0x78, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x08, 0x74, 0x78, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x73, 0x12, 0x2f, 0x0a, 0x0a, 0x74, 0x78, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x54, 0x78, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x09, 0x74, 0x78, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x69,
	0x6e, 0x62, 0x61, 0x73, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x6f, 0x69,
	0x6e, 0x62, 0x61, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x75, 0x74, 0x6f, 0x67, 0x65, 0x6e, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x61, 0x75, 0x74, 0x6f, 0x67, 0x65, 0x6e, 0x12, 0x36, 0x0a,
	0x0d, 0x74, 0x78, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x5f, 0x65, 0x78, 0x74, 0x18, 0x17,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x78,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x45, 0x78, 0x74, 0x52, 0x0b, 0x74, 0x78, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x73, 0x45, 0x78, 0x74, 0x12, 0x39, 0x0a, 0x0e, 0x74, 0x78, 0x5f, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x73, 0x5f, 0x65, 0x78, 0x74, 0x18, 0x18, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x78, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x45,
	0x78, 0x74, 0x52, 0x0c, 0x74, 0x78, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x45, 0x78, 0x74,
	0x12, 0x42, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x19, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74,
	0x6f, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x18, 0x1b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x12, 0x3e, 0x0a, 0x0f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74,
	0x6f, 0x72, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x73, 0x18, 0x1c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72,
	0x53, 0x69, 0x67, 0x6e, 0x73, 0x12, 0x43, 0x0a, 0x12, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x73, 0x18, 0x1d, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10, 0x61, 0x75, 0x74, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x35, 0x0a, 0x0a, 0x78, 0x75, 0x70,
	0x65, 0x72, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x58, 0x75, 0x70, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x09, 0x78, 0x75, 0x70, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e,
	0x12, 0x36, 0x0a, 0x0c, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x18, 0x20, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x0b, 0x6d, 0x6f, 0x64,
	0x69, 0x66, 0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x27, 0x0a, 0x07, 0x48, 0x44, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x48, 0x44, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x48, 0x44, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x73, 0x0a, 0x0a, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x12,
	0x21, 0x0a, 0x0c, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x72, 0x6f, 0x6f, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x69, 0x70, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x74, 0x69, 0x70, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x72, 0x75, 0x6e, 0x6b, 0x5f, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x72, 0x75, 0x6e, 0x6b,
	0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x9a, 0x05, 0x0a, 0x08, 0x55, 0x74, 0x78, 0x6f, 0x4d,
	0x65, 0x74, 0x61, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0b, 0x6c, 0x6f, 0x63, 0x6b, 0x4b, 0x65, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x75, 0x74, 0x78, 0x6f, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x75, 0x74, 0x78, 0x6f, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1a, 0x0a,
	0x08, 0x61, 0x76, 0x67, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x61, 0x76, 0x67, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x2c, 0x0a, 0x11, 0x75, 0x6e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x54, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x75, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x54,
	0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x61, 0x78, 0x5f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x6d, 0x61, 0x78, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x44, 0x0a,
	0x12, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x11, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x73, 0x12, 0x44, 0x0a, 0x12, 0x66, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65, 0x6e,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x11, 0x66, 0x6f, 0x72, 0x62, 0x69, 0x64, 0x64, 0x65,
	0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x3d, 0x0a, 0x1b, 0x6e, 0x65, 0x77,
	0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x18,
	0x6e, 0x65, 0x77, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x17, 0x69, 0x72, 0x72, 0x65,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x17, 0x69, 0x72, 0x72, 0x65, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x38, 0x0a, 0x17, 0x69, 0x72, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x69, 0x62,
	0x6c, 0x65, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x17, 0x69, 0x72, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x69, 0x62, 0x6c,
	0x65, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12, 0x2c, 0x0a, 0x08,
	0x67, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x52, 0x08, 0x67, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x47, 0x0a, 0x14, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x12, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x22, 0xcd, 0x05, 0x0a, 0x0d, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x69, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x70, 0x72, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75,
	0x62, 0x6b, 0x65, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6b,
	0x65, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x5f, 0x72, 0x6f, 0x6f,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x52,
	0x6f, 0x6f, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x37, 0x0a, 0x0c, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x78, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x78, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x6d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x5f, 0x74, 0x72, 0x65, 0x65, 0x18, 0x0d, 0x20, 0x03,
	0x28, 0x0c, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x54, 0x72, 0x65, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x75, 0x72, 0x54, 0x65, 0x72, 0x6d, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x63, 0x75, 0x72, 0x54, 0x65, 0x72, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63,
	0x75, 0x72, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x12, 0x43, 0x0a, 0x0a, 0x66, 0x61,
	0x69, 0x6c, 0x65, 0x64, 0x5f, 0x74, 0x78, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x54, 0x78, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x54, 0x78, 0x73, 0x12,
	0x1e, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x42, 0x69, 0x74, 0x73, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x42, 0x69, 0x74, 0x73, 0x12,
	0x2c, 0x0a, 0x07, 0x4a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x51, 0x75, 0x6f, 0x72, 0x75, 0x6d,
	0x43, 0x65, 0x72, 0x74, 0x52, 0x07, 0x4a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x79, 0x12, 0x19, 0x0a,
	0x08, 0x69, 0x6e, 0x5f, 0x74, 0x72, 0x75, 0x6e, 0x6b, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x69, 0x6e, 0x54, 0x72, 0x75, 0x6e, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x65, 0x78, 0x74,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x6e, 0x65, 0x78,
	0x74, 0x48, 0x61, 0x73, 0x68, 0x1a, 0x3c, 0x0a, 0x0e, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x54,
	0x78, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x8a, 0x01, 0x0a, 0x04, 0x55, 0x74, 0x78, 0x6f, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x74, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x74, 0x6f, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08,
	0x74, 0x6f, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x66, 0x54,
	0x78, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x72, 0x65, 0x66, 0x54, 0x78,
	0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x66, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x72, 0x65, 0x66, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x22, 0xaa, 0x01, 0x0a, 0x0b, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x12, 0x25, 0x0a, 0x0e, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x78,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x54, 0x78, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x64, 0x12,
	0x29, 0x0a, 0x10, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x65, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x22, 0x66, 0x0a,
	0x0d, 0x54, 0x78, 0x44, 0x61, 0x74, 0x61, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x23, 0x0a, 0x0d, 0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x48,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x6f, 0x0a, 0x0a, 0x55, 0x74, 0x78, 0x6f, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x74, 0x78, 0x6f, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x74, 0x78, 0x6f, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x74, 0x78, 0x6f, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x74, 0x78, 0x6f, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x23, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x55, 0x74, 0x78, 0x6f, 0x4b, 0x65, 0x79,
	0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x53, 0x0a, 0x07, 0x55, 0x74, 0x78, 0x6f, 0x4b, 0x65,
	0x79, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x66, 0x54, 0x78, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x66, 0x54, 0x78, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xaa, 0x01, 0x0a, 0x10,
	0x55, 0x74, 0x78, 0x6f, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x2e, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x55, 0x74, 0x78, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x55, 0x74, 0x78, 0x6f,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x55, 0x74, 0x78, 0x6f,
	0x12, 0x32, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x55, 0x74, 0x78, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x55, 0x74,
	0x78, 0x6f, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64,
	0x55, 0x74, 0x78, 0x6f, 0x12, 0x32, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x55, 0x74,
	0x78, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x55, 0x74, 0x78, 0x6f, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x0a, 0x66, 0x72,
	0x6f, 0x7a, 0x65, 0x6e, 0x55, 0x74, 0x78, 0x6f, 0x22, 0x49, 0x0a, 0x11, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a,
	0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x46, 0x72, 0x6f,
	0x7a, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x46, 0x72, 0x6f,
	0x7a, 0x65, 0x6e, 0x22, 0x5c, 0x0a, 0x0a, 0x55, 0x74, 0x78, 0x6f, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x12, 0x28, 0x0a, 0x08, 0x75, 0x74, 0x78, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x55, 0x74, 0x78,
	0x6f, 0x52, 0x08, 0x75, 0x74, 0x78, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x2a, 0x37, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x50, 0x55, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x45,
	0x4d, 0x4f, 0x52, 0x59, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x49, 0x53, 0x4b, 0x10, 0x02,
	0x12, 0x08, 0x0a, 0x04, 0x58, 0x46, 0x45, 0x45, 0x10, 0x03, 0x2a, 0x77, 0x0a, 0x11, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x0f, 0x0a, 0x0b, 0x54, 0x58, 0x5f, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x10, 0x00,
	0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x58, 0x5f, 0x4e, 0x4f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0x01,
	0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x58, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x52, 0x4d, 0x10, 0x02,
	0x12, 0x10, 0x0a, 0x0c, 0x54, 0x58, 0x5f, 0x46, 0x55, 0x52, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x58, 0x5f, 0x55, 0x4e, 0x43, 0x4f, 0x4e, 0x46, 0x49,
	0x52, 0x4d, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x58, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45,
	0x44, 0x10, 0x05, 0x2a, 0x54, 0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x0f, 0x0a, 0x0b, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x54, 0x52, 0x55,
	0x4e, 0x4b, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x42, 0x52,
	0x41, 0x4e, 0x43, 0x48, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f,
	0x4e, 0x4f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0x03, 0x2a, 0x4c, 0x0a, 0x07, 0x51, 0x43, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x45, 0x57, 0x5f, 0x56, 0x49, 0x45, 0x57,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x52, 0x45, 0x50, 0x41, 0x52, 0x45, 0x10, 0x01, 0x12,
	0x0e, 0x0a, 0x0a, 0x50, 0x52, 0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x49, 0x54, 0x10, 0x02, 0x12,
	0x0a, 0x0a, 0x06, 0x43, 0x4f, 0x4d, 0x4d, 0x49, 0x54, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x44,
	0x45, 0x43, 0x49, 0x44, 0x45, 0x10, 0x04, 0x42, 0x29, 0x5a, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x6f, 0x6f, 0x79, 0x61, 0x6e, 0x67, 0x32, 0x30, 0x31,
	0x38, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_contract_proto_rawDescOnce sync.Once
	file_contract_proto_rawDescData = file_contract_proto_rawDesc
)

func file_contract_proto_rawDescGZIP() []byte {
	file_contract_proto_rawDescOnce.Do(func() {
		file_contract_proto_rawDescData = protoimpl.X.CompressGZIP(file_contract_proto_rawDescData)
	})
	return file_contract_proto_rawDescData
}

var file_contract_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_contract_proto_msgTypes = make([]protoimpl.MessageInfo, 69)
var file_contract_proto_goTypes = []interface{}{
	(ResourceType)(0),                   // 0: protos.ResourceType
	(TransactionStatus)(0),              // 1: protos.TransactionStatus
	(BlockStatus)(0),                    // 2: protos.BlockStatus
	(QCState)(0),                        // 3: protos.QCState
	(*GasPrice)(nil),                    // 4: protos.GasPrice
	(*ResourceLimit)(nil),               // 5: protos.ResourceLimit
	(*InvokeRequest)(nil),               // 6: protos.InvokeRequest
	(*InvokeResponse)(nil),              // 7: protos.InvokeResponse
	(*ContractResponse)(nil),            // 8: protos.ContractResponse
	(*WasmCodeDesc)(nil),                // 9: protos.WasmCodeDesc
	(*ContractEvent)(nil),               // 10: protos.ContractEvent
	(*ContractStatData)(nil),            // 11: protos.ContractStatData
	(*ContractStatus)(nil),              // 12: protos.ContractStatus
	(*PingRequest)(nil),                 // 13: protos.PingRequest
	(*PingResponse)(nil),                // 14: protos.PingResponse
	(*NativeCallRequest)(nil),           // 15: protos.NativeCallRequest
	(*NativeCallResponse)(nil),          // 16: protos.NativeCallResponse
	(*ArgPair)(nil),                     // 17: protos.ArgPair
	(*CallArgs)(nil),                    // 18: protos.CallArgs
	(*SyscallHeader)(nil),               // 19: protos.SyscallHeader
	(*PutRequest)(nil),                  // 20: protos.PutRequest
	(*PutResponse)(nil),                 // 21: protos.PutResponse
	(*GetRequest)(nil),                  // 22: protos.GetRequest
	(*GetResponse)(nil),                 // 23: protos.GetResponse
	(*DeleteRequest)(nil),               // 24: protos.DeleteRequest
	(*DeleteResponse)(nil),              // 25: protos.DeleteResponse
	(*IteratorRequest)(nil),             // 26: protos.IteratorRequest
	(*IteratorItem)(nil),                // 27: protos.IteratorItem
	(*IteratorResponse)(nil),            // 28: protos.IteratorResponse
	(*QueryTxRequest)(nil),              // 29: protos.QueryTxRequest
	(*QueryTxResponse)(nil),             // 30: protos.QueryTxResponse
	(*QueryBlockRequest)(nil),           // 31: protos.QueryBlockRequest
	(*QueryBlockResponse)(nil),          // 32: protos.QueryBlockResponse
	(*TransferRequest)(nil),             // 33: protos.TransferRequest
	(*TransferResponse)(nil),            // 34: protos.TransferResponse
	(*ContractCallRequest)(nil),         // 35: protos.ContractCallRequest
	(*ContractCallResponse)(nil),        // 36: protos.ContractCallResponse
	(*CrossContractQueryRequest)(nil),   // 37: protos.CrossContractQueryRequest
	(*CrossContractQueryResponse)(nil),  // 38: protos.CrossContractQueryResponse
	(*Response)(nil),                    // 39: protos.Response
	(*SetOutputRequest)(nil),            // 40: protos.SetOutputRequest
	(*SetOutputResponse)(nil),           // 41: protos.SetOutputResponse
	(*GetCallArgsRequest)(nil),          // 42: protos.GetCallArgsRequest
	(*TxInputExt)(nil),                  // 43: protos.TxInputExt
	(*TxOutputExt)(nil),                 // 44: protos.TxOutputExt
	(*TxInput)(nil),                     // 45: protos.TxInput
	(*TxOutput)(nil),                    // 46: protos.TxOutput
	(*Block)(nil),                       // 47: protos.Block
	(*GetAccountAddressesRequest)(nil),  // 48: protos.GetAccountAddressesRequest
	(*GetAccountAddressesResponse)(nil), // 49: protos.GetAccountAddressesResponse
	(*PostLogRequest)(nil),              // 50: protos.PostLogRequest
	(*PostLogResponse)(nil),             // 51: protos.PostLogResponse
	(*EmitEventRequest)(nil),            // 52: protos.EmitEventRequest
	(*EmitEventResponse)(nil),           // 53: protos.EmitEventResponse
	(*QCSignInfos)(nil),                 // 54: protos.QCSignInfos
	(*SignInfo)(nil),                    // 55: protos.SignInfo
	(*QuorumCert)(nil),                  // 56: protos.QuorumCert
	(*HDInfo)(nil),                      // 57: protos.HDInfo
	(*XuperSignature)(nil),              // 58: protos.XuperSignature
	(*Transaction)(nil),                 // 59: protos.Transaction
	(*LedgerMeta)(nil),                  // 60: protos.LedgerMeta
	(*UtxoMeta)(nil),                    // 61: protos.UtxoMeta
	(*InternalBlock)(nil),               // 62: protos.InternalBlock
	(*Utxo)(nil),                        // 63: protos.Utxo
	(*ModifyBlock)(nil),                 // 64: protos.ModifyBlock
	(*TxDataAccount)(nil),               // 65: protos.TxDataAccount
	(*UtxoRecord)(nil),                  // 66: protos.UtxoRecord
	(*UtxoKey)(nil),                     // 67: protos.UtxoKey
	(*UtxoRecordDetail)(nil),            // 68: protos.UtxoRecordDetail
	(*BalanceDetailInfo)(nil),           // 69: protos.BalanceDetailInfo
	(*UtxoOutput)(nil),                  // 70: protos.UtxoOutput
	nil,                                 // 71: protos.InvokeRequest.ArgsEntry
	nil,                                 // 72: protos.InternalBlock.FailedTxsEntry
	(*SignatureInfo)(nil),               // 73: protos.SignatureInfo
}
var file_contract_proto_depIdxs = []int32{
	0,  // 0: protos.ResourceLimit.type:type_name -> protos.ResourceType
	71, // 1: protos.InvokeRequest.args:type_name -> protos.InvokeRequest.ArgsEntry
	5,  // 2: protos.InvokeRequest.resource_limits:type_name -> protos.ResourceLimit
	43, // 3: protos.InvokeResponse.inputs:type_name -> protos.TxInputExt
	44, // 4: protos.InvokeResponse.outputs:type_name -> protos.TxOutputExt
	6,  // 5: protos.InvokeResponse.requests:type_name -> protos.InvokeRequest
	8,  // 6: protos.InvokeResponse.responses:type_name -> protos.ContractResponse
	45, // 7: protos.InvokeResponse.utxoInputs:type_name -> protos.TxInput
	46, // 8: protos.InvokeResponse.utxoOutputs:type_name -> protos.TxOutput
	17, // 9: protos.CallArgs.args:type_name -> protos.ArgPair
	19, // 10: protos.PutRequest.header:type_name -> protos.SyscallHeader
	19, // 11: protos.GetRequest.header:type_name -> protos.SyscallHeader
	19, // 12: protos.DeleteRequest.header:type_name -> protos.SyscallHeader
	19, // 13: protos.IteratorRequest.header:type_name -> protos.SyscallHeader
	27, // 14: protos.IteratorResponse.items:type_name -> protos.IteratorItem
	19, // 15: protos.QueryTxRequest.header:type_name -> protos.SyscallHeader
	59, // 16: protos.QueryTxResponse.tx:type_name -> protos.Transaction
	19, // 17: protos.QueryBlockRequest.header:type_name -> protos.SyscallHeader
	47, // 18: protos.QueryBlockResponse.block:type_name -> protos.Block
	19, // 19: protos.TransferRequest.header:type_name -> protos.SyscallHeader
	19, // 20: protos.ContractCallRequest.header:type_name -> protos.SyscallHeader
	17, // 21: protos.ContractCallRequest.args:type_name -> protos.ArgPair
	39, // 22: protos.ContractCallResponse.response:type_name -> protos.Response
	19, // 23: protos.CrossContractQueryRequest.header:type_name -> protos.SyscallHeader
	17, // 24: protos.CrossContractQueryRequest.args:type_name -> protos.ArgPair
	39, // 25: protos.CrossContractQueryResponse.response:type_name -> protos.Response
	19, // 26: protos.SetOutputRequest.header:type_name -> protos.SyscallHeader
	39, // 27: protos.SetOutputRequest.response:type_name -> protos.Response
	19, // 28: protos.GetCallArgsRequest.header:type_name -> protos.SyscallHeader
	19, // 29: protos.GetAccountAddressesRequest.header:type_name -> protos.SyscallHeader
	19, // 30: protos.PostLogRequest.header:type_name -> protos.SyscallHeader
	19, // 31: protos.EmitEventRequest.header:type_name -> protos.SyscallHeader
	55, // 32: protos.QCSignInfos.QCSignInfos:type_name -> protos.SignInfo
	3,  // 33: protos.QuorumCert.Type:type_name -> protos.QCState
	54, // 34: protos.QuorumCert.SignInfos:type_name -> protos.QCSignInfos
	45, // 35: protos.Transaction.tx_inputs:type_name -> protos.TxInput
	46, // 36: protos.Transaction.tx_outputs:type_name -> protos.TxOutput
	43, // 37: protos.Transaction.tx_inputs_ext:type_name -> protos.TxInputExt
	44, // 38: protos.Transaction.tx_outputs_ext:type_name -> protos.TxOutputExt
	6,  // 39: protos.Transaction.contract_requests:type_name -> protos.InvokeRequest
	73, // 40: protos.Transaction.initiator_signs:type_name -> protos.SignatureInfo
	73, // 41: protos.Transaction.auth_require_signs:type_name -> protos.SignatureInfo
	58, // 42: protos.Transaction.xuper_sign:type_name -> protos.XuperSignature
	64, // 43: protos.Transaction.modify_block:type_name -> protos.ModifyBlock
	57, // 44: protos.Transaction.HD_info:type_name -> protos.HDInfo
	6,  // 45: protos.UtxoMeta.reserved_contracts:type_name -> protos.InvokeRequest
	6,  // 46: protos.UtxoMeta.forbidden_contract:type_name -> protos.InvokeRequest
	4,  // 47: protos.UtxoMeta.gasPrice:type_name -> protos.GasPrice
	6,  // 48: protos.UtxoMeta.group_chain_contract:type_name -> protos.InvokeRequest
	59, // 49: protos.InternalBlock.transactions:type_name -> protos.Transaction
	72, // 50: protos.InternalBlock.failed_txs:type_name -> protos.InternalBlock.FailedTxsEntry
	56, // 51: protos.InternalBlock.Justify:type_name -> protos.QuorumCert
	67, // 52: protos.UtxoRecord.item:type_name -> protos.UtxoKey
	66, // 53: protos.UtxoRecordDetail.openUtxo:type_name -> protos.UtxoRecord
	66, // 54: protos.UtxoRecordDetail.lockedUtxo:type_name -> protos.UtxoRecord
	66, // 55: protos.UtxoRecordDetail.frozenUtxo:type_name -> protos.UtxoRecord
	63, // 56: protos.UtxoOutput.utxoList:type_name -> protos.Utxo
	57, // [57:57] is the sub-list for method output_type
	57, // [57:57] is the sub-list for method input_type
	57, // [57:57] is the sub-list for extension type_name
	57, // [57:57] is the sub-list for extension extendee
	0,  // [0:57] is the sub-list for field type_name
}

func init() { file_contract_proto_init() }
func file_contract_proto_init() {
	if File_contract_proto != nil {
		return
	}
	file_permission_acl_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_contract_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GasPrice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceLimit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvokeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvokeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContractResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WasmCodeDesc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContractEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContractStatData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContractStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NativeCallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NativeCallResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArgPair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyscallHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IteratorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IteratorItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IteratorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryTxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryTxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryBlockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryBlockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContractCallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContractCallResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CrossContractQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CrossContractQueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetOutputRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetOutputResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCallArgsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxInputExt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxOutputExt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Block); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountAddressesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountAddressesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostLogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmitEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmitEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QCSignInfos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuorumCert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HDInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XuperSignature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LedgerMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UtxoMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InternalBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Utxo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxDataAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UtxoRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UtxoKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UtxoRecordDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalanceDetailInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contract_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UtxoOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_contract_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   69,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_contract_proto_goTypes,
		DependencyIndexes: file_contract_proto_depIdxs,
		EnumInfos:         file_contract_proto_enumTypes,
		MessageInfos:      file_contract_proto_msgTypes,
	}.Build()
	File_contract_proto = out.File
	file_contract_proto_rawDesc = nil
	file_contract_proto_goTypes = nil
	file_contract_proto_depIdxs = nil
}
