syntax = "proto3";
option go_package = "github.com/wooyang2018/corechain/protos";

package protos;

// QCState is the phase of hotstuff
enum QCState {
  NEW_VIEW = 0;
  PREPARE = 1;
  PRE_COMMIT = 2;
  COMMIT = 3;
  DECIDE = 4;
}

// QuorumCert is a data type that combines a collection of signatures from replicas.
message QuorumCert {
  // The id of Proposal this QC certified.
  bytes ProposalId = 1;
  // The msg of Proposal this QC certified.
  bytes ProposalMsg = 2;
  // The current type of this QC certified.
  // the type contains `NEW_VIEW`, `PREPARE`
  QCState Type = 3;
  // The view number of this QC certified.
  int64 ViewNumber = 4;
  // SignInfos is the signs of the leader gathered from replicas
  // of a specifically certType.
  QCSignInfos SignInfos  = 5;
}

// QCSignInfos is the signs of the leader gathered from replicas of a specifically certType.
// A slice of signs is used at present.
// TODO @qizheng09: It will be change to Threshold-Signatures after
// Crypto lib support Threshold-Signatures.
message QCSignInfos {
  // QCSignInfos
  repeated SignInfo QCSignInfos = 1;
}

// SignInfo is the signature information of the
message SignInfo {
  string Address = 1;
  string PublicKey = 2;
  bytes  Sign = 3;
}

// QuorumCertSign 是(Addr, Pk, 签名)三元组
message QuorumCertSign {
  string Address = 1;
  string PublicKey = 2;
  bytes  Sign = 3;
}

// ProposalMsg 是chained-bft中定义的Block形式，区别在于其有一个parentQC，该存储只供chained-bft类使用
message ProposalMsg {
  // 生产高度
  int64 proposalView = 1;
  bytes proposalId = 2;
  // 生产时间
  int64 timestamp = 3;
  // 上一个区块基本信息
  bytes JustifyQC = 4;
  // 签名
  QuorumCertSign Sign = 5;
  // 消息摘要
  bytes MsgDigest = 6;
}

// VoteMsg is the vote message of the protocal.
message VoteMsg {
  bytes VoteInfo = 1;
  bytes LedgerCommitInfo = 2;
  repeated QuorumCertSign Signature = 3;
}
